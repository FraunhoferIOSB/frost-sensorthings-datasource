{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","appEvents","AlertSrv","GenericDatasourceQueryCtrl","$scope","$injector","alertSrv","scope","notificationShowTime","target","panelType","ctrl","panel","type","queryTypes","queryThingOptions","selectedLimit","selectedDatastreamId","selectedDatastreamName","selectedDatastreamDirty","selectedDatastreamObservationType","allDataSources","selectedSensorId","selectedSensorName","selectedSensorDirty","allSensors","selectedThingId","selectedThingName","selectedThingDirty","allThings","selectedLocationId","selectedLocationName","selectedLocationDirty","allLocations","selectedThingOption","panelCtrl","events","on","onDataReceived","bind","onDataError","jsonQuery","set","query","queryparams","isOmObservationType","encodeURIComponent","queryparam","index","push","join","dataList","lastQueryError","err","handleQueryCtrlError","refId","error","data","message","buildQueryString","console","rawQuery","self","datasource","metricFindQuery","then","result","catch","sensor","_","find","log","text","resetDataSource","targetUrl","value","getFormatedId","id","Number","isInteger","isNaN","datastream","toLowerCase","refresh","isEmpty","includes","thing","location","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!';\n\nimport { appEvents} from 'app/core/core';\nimport { AlertSrv} from 'app/core/core';\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n  constructor($scope, $injector,alertSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.alertSrv = alertSrv;\n    this.notificationShowTime = 5000;\n\n    this.target.panelType = this.scope.ctrl.panel.type;\n\n    this.queryTypes = ['Sensors', 'Things', 'Locations'];\n    this.queryThingOptions = ['Datastreams', \"Historical Locations\", \"Historical Locations with Coordinates\"];\n\n    if(typeof(this.target.selectedLimit) == \"undefined\") {\n      this.target.selectedLimit = 1;\n    }\n\n    // type init\n    this.target.type = this.target.type || this.queryTypes[0]; // rename to selectedType?\n\n    // datastream init\n    this.target.selectedDatastreamId = this.target.selectedDatastreamId || 0;\n    this.target.selectedDatastreamName = this.target.selectedDatastreamName || 'select a datastream';\n    this.target.selectedDatastreamDirty = this.target.selectedDatastreamDirty || false;\n    this.target.selectedDatastreamObservationType = this.target.selectedDatastreamObservationType || '';\n    this.allDataSources  = {};\n\n    // sensor init\n    this.target.selectedSensorId = this.target.selectedSensorId || 0;\n    this.target.selectedSensorName = this.target.selectedSensorName || 'select a sensor';\n    this.target.selectedSensorDirty = this.target.selectedSensorDirty || false;\n    this.allSensors  = {};\n\n    // thing init start\n    this.target.selectedThingId = this.target.selectedThingId || 0;\n    this.target.selectedThingName = this.target.selectedThingName || 'select a thing';\n    this.target.selectedThingDirty = this.target.selectedThingDirty || false;\n    this.allThings  = {};\n\n    // location init start\n    this.target.selectedLocationId = this.target.selectedLocationId || 0;\n    this.target.selectedLocationName = this.target.selectedLocationName || 'select a location';\n    this.target.selectedLocationDirty = this.target.selectedLocationDirty || false;\n    this.allLocations = {};\n\n    // thing options init\n    this.target.selectedThingOption = this.target.selectedThingOption || this.queryThingOptions[0];\n\n    this.panelCtrl.events.on('data-received', this.onDataReceived.bind(this), $scope);\n    this.panelCtrl.events.on('data-error', this.onDataError.bind(this), $scope);\n\n    this.target.jsonQuery = this.target.jsonQuery || '';\n    // appEvents.emit('alert-success', ['Test notification sent', '']);\n\n    if (this.target.selectedThingDirty) {\n      this.alertSrv.set('Thing Not Found', this.target.selectedThingId + ' is not a valid thing name', 'error', this.notificationShowTime);\n    }\n\n    if (this.target.selectedSensorDirty) {\n      this.alertSrv.set('Sensor Not Found', this.target.selectedSensorId + ' is not a valid sensor name', 'error', this.notificationShowTime);\n    }\n\n    if (this.target.selectedDatastreamDirty) {\n      this.alertSrv.set('Datastream Not Found', this.target.selectedDatastreamName + ' is not a valid datastream name', 'error', this.notificationShowTime);\n    }\n\n    if (this.target.selectedLocationDirty) {\n      this.alertSrv.set('Location Not Found', this.target.selectedLocationId + ' is not a valid location name', 'error', this.notificationShowTime);\n    }\n  }\n\n  buildQueryString() {\n    let query = \"\";\n    let queryparams = {};\n    if(this.target.type === \"Sensors\") {\n      query += \"/Sensors\";\n      if(this.target.selectedSensorId !== 0) {\n        query += `(${this.target.selectedSensorId})`;\n        if(this.target.selectedDatastreamId !== 0) {\n          query = \"/Datastreams\"\n          query += `(${this.target.selectedDatastreamId})`;\n          query += \"/Observations\";\n          queryparams[\"$select\"] = \"phenomenonTime,result\";\n          queryparams[\"$orderby\"] = \"phenomenonTime desc\";\n          if(this.isOmObservationType(this.target.selectedDatastreamObservationType)) {\n            queryparams[\"$jsonPath\"] = this.target.jsonQuery;\n          }\n        }\n      }\n    } else if(this.target.type === \"Things\") {\n      query += \"/Things\";\n      if(this.target.selectedThingId !== 0) {\n        query += `(${this.target.selectedThingId})`;\n        if(this.target.selectedThingOption === \"Datastreams\") {\n          query += \"/Datastreams\"\n          if(this.target.selectedDatastreamId !== 0) {\n            query = \"/Datastreams\"\n            query += `(${this.target.selectedDatastreamId})`;\n            query += \"/Observations\";\n            queryparams[\"$select\"] = \"phenomenonTime,result\";\n            queryparams[\"$orderby\"] = \"phenomenonTime desc\";\n            if(this.isOmObservationType(this.target.selectedDatastreamObservationType)) {\n              queryparams[\"$jsonPath\"] = this.target.jsonQuery;\n            }\n          }\n        } else if(this.target.selectedThingOption === \"Historical Locations\") {\n          query += \"/HistoricalLocations\";\n          queryparams[\"$expand\"] = \"Locations($select=name)\";\n          queryparams[\"$select\"] = \"time\";\n          queryparams[\"$top\"] = this.target.selectedLimit;\n        } else if(this.target.selectedThingOption === \"Historical Locations with Coordinates\") {\n          query += \"/HistoricalLocations\";\n          queryparams[\"$expand\"] = \"Locations($select=name,Location)\";\n          queryparams[\"$select\"] = \"time\";\n          queryparams[\"$top\"] = this.target.selectedLimit;\n          if(this.target.selectedDatastreamId !== 0) {\n            queryparams[\"$combine\"] = encodeURIComponent(\"/Datastreams\" + `(${this.target.selectedDatastreamId})` + \"/Observations\" + \"?\" + \"$select=result,phenomenonTime\" + \"&\" + `$top=${this.target.selectedLimit}`);\n            if(this.isOmObservationType(this.target.selectedDatastreamObservationType)) {\n              queryparams[\"$jsonPath\"] = this.target.jsonQuery;\n            }\n          }\n        }\n      }\n    } else if(this.target.type === \"Locations\") {\n      query += \"/Locations\";\n      if(this.target.selectedLocationId !== 0) {\n        query += `(${this.target.selectedLocationId})`;\n        query += \"/HistoricalLocations\"\n        queryparams[\"$expand\"] = \"Things($select=name)\";\n        queryparams[\"$select\"] = \"time\";\n      }\n    }\n    queryparams['$filter'] = \"$timeFilter\";\n    let queryparam = [];\n    for(var index in queryparams) {\n      queryparam.push(`${index}=${queryparams[index]}`);\n    }\n    return query + \"?\" + queryparam.join('&');\n  }\n\n  onDataReceived(dataList) {\n    this.lastQueryError = null;\n  }\n\n  onDataError(err) {\n    this.handleQueryCtrlError(err);\n  }\n\n  handleQueryCtrlError(err) {\n    if (err.query && err.query.refId && err.query.refId !== this.target.refId) {\n      return;\n    }\n\n    if (err.error && err.error.data && err.error.data.error) {\n      this.lastQueryError = err.error.data.error.message;\n    } else if (err.error && err.error.data) {\n      this.lastQueryError = err.error.data.message;\n    } else if (err.data && err.data.error) {\n      this.lastQueryError = err.data.error.message;\n    } else if (err.data && err.data.message) {\n      this.lastQueryError = err.data.message;\n    } else {\n      this.lastQueryError = err;\n    }\n  }\n\n  toggleEditorMode() {\n    try {\n      this.target.query = this.buildQueryString();\n    } catch (err) {\n      console.error('query render error');\n    }\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  //#region Sensor Starts\n  showSensors(){\n    return this.target.type === 'Sensors';\n  }\n\n  jsonQueryClick(type) {\n    if(!this.isOmObservationType(type)){\n      this.alertSrv.set('Unsupported Observation Type', 'JSONPath only works when Datastream.observationType is OM_Observation' , 'warning', this.notificationShowTime);\n    }\n  }\n\n  getSensors(query) {\n    let self = this;\n    return this.datasource.metricFindQuery((query || ''),'/Sensors','sensor').then((result)=>{\n      self.allSensors = result;\n      return result;\n    }).catch(this.handleQueryCtrlError.bind(this));\n  }\n\n  onSensorChange(query,selectedSensorId) {\n    let sensor = _.find(this.allSensors, { 'value' : this.target.selectedSensorId });\n    console.log('find all sensors');\n\n    if(sensor) {\n      this.target.selectedSensorName = sensor.text;\n      this.target.selectedSensorDirty = false;\n    } else {\n      this.target.selectedSensorDirty = true;\n      this.target.selectedDatastreamId = 0;\n      this.alertSrv.set('Sensor Not Found', this.target.selectedSensorId + ' is not a valid sensor name', 'error', this.notificationShowTime);\n    }\n    this.resetDataSource();\n  }\n  //#endregion Sensor end\n\n  showThingOptions(){\n    return this.target.selectedThingId !== 0 && this.target.type === 'Things';\n  }\n\n  showThingLimit() {\n    //type = Target\n    //selectedThingOption = [Historical Locations|Historical Locations with Coordinates]\n    return this.target.type === this.queryTypes[1] && \n      this.target.selectedThingId !== 0 && \n      (this.target.selectedThingOption === this.queryThingOptions[1] || this.target.selectedThingOption === this.queryThingOptions[2])\n  }\n\n  //#region datastream starts\n  showDatastreams(){\n    return (this.target.type === 'Sensors' && this.target.selectedSensorId !== 0) ||\n      (this.target.type === 'Things' && this.target.selectedThingId !== 0 && \n        (this.target.selectedThingOption === 'Datastreams' || this.target.selectedThingOption === 'Historical Locations with Coordinates'));\n  }\n\n  // TODO: show errors below each query editor\n  getDataStreams(query) {\n    let self = this;\n    let targetUrl = '';\n    if (this.target.selectedThingDirty || this.target.selectedSensorDirty) {\n      return [{\n        text: 'select a datastream',\n        value: 0\n      }];\n    }\n    if (this.target.type === 'Sensors') {\n      targetUrl = '/Sensors('+this.getFormatedId(this.target.selectedSensorId)+')/Datastreams';\n    } else {\n      targetUrl = '/Things('+this.getFormatedId(this.target.selectedThingId)+')/Datastreams';\n    }\n    return this.datasource.metricFindQuery((query || ''),targetUrl,'datastream').then((result)=>{\n      self.allDataSources = result;\n      return result;\n    }).catch(this.handleQueryCtrlError.bind(this));\n  }\n\n  getFormatedId(id) {\n    return (Number.isInteger(id) || !isNaN(id)) ? id : '\"'+id+'\"';\n  }\n\n  onDataStreamChange(query) {\n    if (this.target.selectedThingDirty || this.target.selectedSensorDirty) {\n      return;\n    }\n\n    let datastream = _.find(this.allDataSources, { 'value' : this.target.selectedDatastreamId });\n\n    if(datastream) {\n      this.target.selectedDatastreamName = datastream.text;\n      this.target.selectedDatastreamObservationType = datastream.type.toLowerCase();\n      this.target.selectedDatastreamDirty = false;\n    } else {\n      this.target.selectedDatastreamDirty = true;\n      this.target.selectedDatastreamName = this.target.selectedDatastreamId;\n      this.target.selectedDatastreamObservationType = '';\n      this.alertSrv.set('Datastream Not Found', this.target.selectedDatastreamName + ' is not a valid datastream name', 'error', this.notificationShowTime);\n    }\n\n    if (this.isOmObservationType(this.target.selectedDatastreamObservationType)) {\n    } else {\n      this.panelCtrl.refresh();\n    }\n  }\n\n  onJsonQueryChange() {\n    this.panelCtrl.refresh();\n  }\n\n  showJsonQuery() {\n    return (this.target.selectedDatastreamId !== 0) &&\n      (this.target.type === 'Sensors' || \n      this.target.type === 'Things' && \n      (this.target.selectedThingOption === 'Datastreams' || this.target.selectedThingOption === 'Historical Locations with Coordinates')) && \n      this.isOmObservationType(this.target.selectedDatastreamObservationType)\n  }\n\n  isOmObservationType(type) {\n    if (_.isEmpty(type) || !type.includes('om_observation')) {\n      this.target.jsonQuery = '';\n      return false;\n    }\n    return true;\n  }\n\n  resetDataSource(){\n    this.target.selectedDatastreamId = 0;\n    this.target.selectedDatastreamName = 'select a datastream';\n    this.panelCtrl.refresh();\n  }\n  //#endregion datastream ends\n\n  typeChanged(type) {\n    this.target.selectedSensorId = 0;\n    this.target.selectedThingId = 0;\n    this.resetDataSource();\n  }\n\n  //#region thing starts\n  showThings(){\n    return this.target.type === 'Things' || this.target.type === 'Historical Locations';\n  }\n\n  getThings(query) {\n    let self = this;\n    return this.datasource.metricFindQuery((query || ''),'/Things','thing').then((result)=>{\n      self.allThings = result;\n      return result;\n    }).catch(this.handleQueryCtrlError.bind(this));\n  }\n\n  onThingChange(query) {\n    let thing = _.find(this.allThings, { 'value' : this.target.selectedThingId });\n    if(thing) {\n      this.target.selectedThingName = thing.text;\n      this.target.selectedThingDirty = false;\n    } else {\n      this.target.selectedThingDirty = true;\n      this.target.selectedDatastreamId = 0;\n      this.alertSrv.set('Thing Not Found', this.target.selectedThingId + ' is not a valid thing name', 'error', this.notificationShowTime);\n    }\n    this.resetDataSource();\n  }\n\n  onThingsLimitChange(query) {\n    this.panelCtrl.refresh();\n  }\n\n  onThingOptionChange(query){\n    this.panelCtrl.refresh();\n  }\n  //#endregion thing ends\n\n  //#region location starts\n  showLocations(){\n    return this.target.type === 'Locations';\n  }\n\n  getLocations(query) {\n    let self = this;\n    return this.datasource.metricFindQuery((query || ''),'/Locations','location').then((result)=>{\n      self.allLocations = result;\n      return result;\n    }).catch(this.handleQueryCtrlError.bind(this));\n  }\n\n  onLocationChange(query) {\n    // find and store the selected location name to use it as column name (refer datasource.js->transformThings())\n    let location = _.find(this.allLocations, { 'value' : this.target.selectedLocationId });\n\n    if (location) {\n      this.target.selectedLocationName = location.text;\n      this.target.selectedLocationDirty = false;\n    } else {\n      this.target.selectedLocationDirty = true;\n      this.alertSrv.set('Location Not Found', this.target.selectedLocationId + ' is not a valid location name', 'error', this.notificationShowTime);\n    }\n\n    this.panelCtrl.refresh();\n  }\n  //#endregion location ends\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';"]}
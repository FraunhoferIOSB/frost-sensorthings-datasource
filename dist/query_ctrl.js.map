{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","appEvents","AlertSrv","GenericDatasourceQueryCtrl","$scope","$injector","alertSrv","scope","notificationShowTime","target","panelType","ctrl","panel","type","queryTypes","queryThingOptions","selectedThingOption","selectedLimit","selectedDatastreamId","selectedDatastreamName","selectedDatastreamDirty","selectedDatastreamObservationType","allDataSources","selectedSensorId","selectedSensorName","selectedSensorDirty","allSensors","selectedThingId","selectedThingName","selectedThingDirty","allThings","selectedLocationId","selectedLocationName","selectedLocationDirty","allLocations","panelCtrl","events","on","onDataReceived","bind","onDataError","jsonQuery","set","dataList","lastQueryError","err","handleQueryCtrlError","query","refId","error","data","message","rawQuery","isOmObservationType","self","datasource","metricFindQuery","then","result","catch","sensor","_","find","console","log","text","resetDataSource","targetUrl","value","getFormatedId","id","Number","isInteger","isNaN","datastream","toLowerCase","refresh","isEmpty","includes","thing","location","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!';\n\nimport { appEvents} from 'app/core/core';\nimport { AlertSrv} from 'app/core/core';\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n  constructor($scope, $injector,alertSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.alertSrv = alertSrv;\n    this.notificationShowTime = 5000;\n\n    this.target.panelType = this.scope.ctrl.panel.type;\n\n    this.queryTypes = ['Sensors', 'Things','Locations'];\n    this.queryThingOptions = ['Datastreams', \"Historical Locations\", \"Historical Locations with Coordinates\"];\n\n    this.target.type = this.target.type || this.queryTypes[0]; // rename to selectedType?\n    this.target.selectedThingOption = this.target.selectedThingOption || this.queryThingOptions[0];\n\n    if(typeof(this.target.selectedLimit) == \"undefined\") {\n      this.target.selectedLimit = 1;\n    }\n\n    // datastream init\n    this.target.selectedDatastreamId = this.target.selectedDatastreamId || 0;\n    this.target.selectedDatastreamName = this.target.selectedDatastreamName || 'select a datastream';\n    this.target.selectedDatastreamDirty = this.target.selectedDatastreamDirty || false;\n    this.target.selectedDatastreamObservationType = this.target.selectedDatastreamObservationType || '';\n    this.allDataSources  = {};\n\n    // sensor init\n    this.target.selectedSensorId = this.target.selectedSensorId || 0;\n    this.target.selectedSensorName = this.target.selectedSensorName || 'select a sensor';\n    this.target.selectedSensorDirty = this.target.selectedSensorDirty || false;\n    this.allSensors  = {};\n\n    // thing init start\n    this.target.selectedThingId = this.target.selectedThingId || 0;\n    this.target.selectedThingName = this.target.selectedThingName || 'select a thing';\n    this.target.selectedThingDirty = this.target.selectedThingDirty || false;\n    this.allThings  = {};\n\n    // location init start\n    this.target.selectedLocationId = this.target.selectedLocationId || 0;\n    this.target.selectedLocationName = this.target.selectedLocationName || 'select a location';\n    this.target.selectedLocationDirty = this.target.selectedLocationDirty || false;\n    this.allLocations = {};\n\n    this.panelCtrl.events.on('data-received', this.onDataReceived.bind(this), $scope);\n    this.panelCtrl.events.on('data-error', this.onDataError.bind(this), $scope);\n\n    this.target.jsonQuery = this.target.jsonQuery || '';\n    // appEvents.emit('alert-success', ['Test notification sent', '']);\n\n    if (this.target.selectedThingDirty) {\n      this.alertSrv.set('Thing Not Found', this.target.selectedThingId + ' is not a valid thing name', 'error', this.notificationShowTime);\n    }\n\n    if (this.target.selectedSensorDirty) {\n      this.alertSrv.set('Sensor Not Found', this.target.selectedSensorId + ' is not a valid sensor name', 'error', this.notificationShowTime);\n    }\n\n    if (this.target.selectedDatastreamDirty) {\n      this.alertSrv.set('Datastream Not Found', this.target.selectedDatastreamName + ' is not a valid datastream name', 'error', this.notificationShowTime);\n    }\n\n    if (this.target.selectedLocationDirty) {\n      this.alertSrv.set('Location Not Found', this.target.selectedLocationId + ' is not a valid location name', 'error', this.notificationShowTime);\n    }\n  }\n\n  onDataReceived(dataList) {\n    this.lastQueryError = null;\n  }\n\n  onDataError(err) {\n    this.handleQueryCtrlError(err);\n  }\n\n  handleQueryCtrlError(err) {\n    if (err.query && err.query.refId && err.query.refId !== this.target.refId) {\n      return;\n    }\n\n    if (err.error && err.error.data && err.error.data.error) {\n      this.lastQueryError = err.error.data.error.message;\n    } else if (err.error && err.error.data) {\n      this.lastQueryError = err.error.data.message;\n    } else if (err.data && err.data.error) {\n      this.lastQueryError = err.data.error.message;\n    } else if (err.data && err.data.message) {\n      this.lastQueryError = err.data.message;\n    } else {\n      this.lastQueryError = err;\n    }\n  }\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  //Sensor Starts\n  showSensors(){\n    return this.target.type === 'Sensors';\n  }\n\n  jsonQueryClick(type) {\n    if(!this.isOmObservationType(type)){\n      this.alertSrv.set('Unsupported Observation Type', 'JSONPath only works when Datastream.observationType is OM_Observation' , 'warning', this.notificationShowTime);\n    }\n  }\n\n  getSensors(query) {\n    let self = this;\n    return this.datasource.metricFindQuery((query || ''),'/Sensors','sensor').then((result)=>{\n      self.allSensors = result;\n      return result;\n    }).catch(this.handleQueryCtrlError.bind(this));\n  }\n\n  onSensorChange(query,selectedSensorId) {\n    let sensor = _.find(this.allSensors, { 'value' : this.target.selectedSensorId });\n    console.log('find all sensors');\n\n    if(sensor) {\n      this.target.selectedSensorName = sensor.text;\n      this.target.selectedSensorDirty = false;\n    } else {\n      this.target.selectedSensorDirty = true;\n      this.target.selectedDatastreamId = 0;\n      this.alertSrv.set('Sensor Not Found', this.target.selectedSensorId + ' is not a valid sensor name', 'error', this.notificationShowTime);\n    }\n    this.resetDataSource();\n  }\n  //Sensor end\n\n  showThingOptions(){\n    return this.target.selectedThingId !== 0 && this.target.type === 'Things';\n  }\n\n  showThingLimit() {\n    //type = Target\n    //selectedThingOption = [Historical Locations|Historical Locations with Coordinates]\n    return this.target.type === this.queryTypes[1] && \n      this.target.selectedThingId !== 0 && \n      (this.target.selectedThingOption === this.queryThingOptions[1] || this.target.selectedThingOption === this.queryThingOptions[2])\n  }\n\n  //datastream starts\n  showDatastreams(){\n    return (this.target.type === 'Sensors' && this.target.selectedSensorId !== 0) ||\n      (this.target.type === 'Things' && this.target.selectedThingId !== 0 && this.target.selectedThingOption === 'Datastreams');\n  }\n\n  // TODO: show errors below each query editor\n  getDataStreams(query) {\n    let self = this;\n    let targetUrl = '';\n    if (this.target.selectedThingDirty || this.target.selectedSensorDirty) {\n      return [{\n        text: 'select a datastream',\n        value: 0\n      }];\n    }\n    if (this.target.type === 'Sensors') {\n      targetUrl = '/Sensors('+this.getFormatedId(this.target.selectedSensorId)+')/Datastreams';\n    } else {\n      targetUrl = '/Things('+this.getFormatedId(this.target.selectedThingId)+')/Datastreams';\n    }\n    return this.datasource.metricFindQuery((query || ''),targetUrl,'datastream').then((result)=>{\n      self.allDataSources = result;\n      return result;\n    }).catch(this.handleQueryCtrlError.bind(this));\n  }\n\n  getFormatedId(id) {\n    return (Number.isInteger(id) || !isNaN(id)) ? id : '\"'+id+'\"';\n  }\n\n  onDataStreamChange(query) {\n    if (this.target.selectedThingDirty || this.target.selectedSensorDirty) {\n      return;\n    }\n\n    let datastream = _.find(this.allDataSources, { 'value' : this.target.selectedDatastreamId });\n\n    if(datastream) {\n      this.target.selectedDatastreamName = datastream.text;\n      this.target.selectedDatastreamObservationType = datastream.type.toLowerCase();\n      this.target.selectedDatastreamDirty = false;\n    } else {\n      this.target.selectedDatastreamDirty = true;\n      this.target.selectedDatastreamName = this.target.selectedDatastreamId;\n      this.target.selectedDatastreamObservationType = '';\n      this.alertSrv.set('Datastream Not Found', this.target.selectedDatastreamName + ' is not a valid datastream name', 'error', this.notificationShowTime);\n    }\n\n    if (this.isOmObservationType(this.target.selectedDatastreamObservationType)) {\n    } else {\n      this.panelCtrl.refresh();\n    }\n  }\n\n  onJsonQueryChange() {\n    this.panelCtrl.refresh();\n  }\n\n  showJsonQuery() {\n    return (this.target.selectedDatastreamId !== 0) &&\n      (this.target.type === 'Sensors' || \n      this.target.type === 'Things' && this.target.selectedThingOption === 'Datastreams') &&\n      this.isOmObservationType(this.target.selectedDatastreamObservationType);\n  }\n\n  isOmObservationType(type) {\n    if (_.isEmpty(type) || !type.includes('om_observation')) {\n      this.target.jsonQuery = '';\n      return false;\n    }\n    return true;\n  }\n\n  resetDataSource(){\n    this.target.selectedDatastreamId = 0;\n    this.target.selectedDatastreamName = 'select a datastream';\n    this.panelCtrl.refresh();\n  }\n  //datastream ends\n\n  typeChanged(type) {\n    this.target.selectedSensorId = 0;\n    this.target.selectedThingId = 0;\n    this.resetDataSource();\n  }\n\n  //thing starts\n  showThings(){\n    return this.target.type === 'Things' || this.target.type === 'Historical Locations';\n  }\n\n  getThings(query) {\n    let self = this;\n    return this.datasource.metricFindQuery((query || ''),'/Things','thing').then((result)=>{\n      self.allThings = result;\n      return result;\n    }).catch(this.handleQueryCtrlError.bind(this));\n  }\n\n  onThingChange(query) {\n    let thing = _.find(this.allThings, { 'value' : this.target.selectedThingId });\n    if(thing) {\n      this.target.selectedThingName = thing.text;\n      this.target.selectedThingDirty = false;\n    } else {\n      this.target.selectedThingDirty = true;\n      this.target.selectedDatastreamId = 0;\n      this.alertSrv.set('Thing Not Found', this.target.selectedThingId + ' is not a valid thing name', 'error', this.notificationShowTime);\n    }\n    this.resetDataSource();\n  }\n\n  onThingsLimitChange(query) {\n    this.panelCtrl.refresh();\n  }\n\n  onThingOptionChange(query){\n    this.panelCtrl.refresh();\n  }\n  //thing ends\n\n  //location starts\n  showLocations(){\n    return this.target.type === 'Locations';\n  }\n\n  getLocations(query) {\n    let self = this;\n    return this.datasource.metricFindQuery((query || ''),'/Locations','location').then((result)=>{\n      self.allLocations = result;\n      return result;\n    }).catch(this.handleQueryCtrlError.bind(this));\n  }\n\n  onLocationChange(query) {\n    // find and store the selected location name to use it as column name (refer datasource.js->transformThings())\n    let location = _.find(this.allLocations, { 'value' : this.target.selectedLocationId });\n\n    if (location) {\n      this.target.selectedLocationName = location.text;\n      this.target.selectedLocationDirty = false;\n    } else {\n      this.target.selectedLocationDirty = true;\n      this.alertSrv.set('Location Not Found', this.target.selectedLocationId + ' is not a valid location name', 'error', this.notificationShowTime);\n    }\n\n    this.panelCtrl.refresh();\n  }\n  //location ends\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';"]}
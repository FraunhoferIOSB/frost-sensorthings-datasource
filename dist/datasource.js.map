{"version":3,"sources":["../src/datasource.js"],"names":["_","moment","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","withCredentials","headers","basicAuth","length","options","allPromises","allTargetResults","data","forEach","targets","target","push","doRequest","toString","method","then","response","filtered","map","value","index","result","resultTime","format","bind","Promise","all","values","status","message","title","query","replace","annotation","annotationQuery","range","datasource","enable","iconColor","rangeRaw","suburl","interpolated","mapToTextValue","text","datasourceRequest","filter","scopedVars","refId","hide"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport moment from \"moment\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.headers = {'Content-Type': 'application/json'};\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    }\n  }\n\n  query(options) {\n    let allPromises = [];\n    let allTargetResults = {data:[]};\n\n    _.forEach(options.targets,function(target){\n      allPromises.push(this.doRequest({\n        url: this.url + '/Datastreams('+target.target.toString()+')/Observations',\n        // data: query,\n        method: 'GET'\n      }).then(function(response){\n        let filtered = _.map(response.data.value,function(value,index){\n          return [value.result,moment(value.resultTime,\"YYYY-MM-DDTHH:mm:ss.SSSZ\").format('x')];\n        });\n        return {\n          'target' : target.target.toString(),\n          'datapoints' : filtered\n        };\n      }));\n\n    }.bind(this));\n\n    return Promise.all(allPromises).then(function(values) {\n      _.forEach(values,function(value){\n        allTargetResults.data.push(value);\n      });\n      return allTargetResults;\n    });\n  }\n\n  testDatasource() {\n    return this.doRequest({\n      url: this.url,\n      method: 'GET',\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n    var annotationQuery = {\n      range: options.range,\n      annotation: {\n        name: options.annotation.name,\n        datasource: options.annotation.datasource,\n        enable: options.annotation.enable,\n        iconColor: options.annotation.iconColor,\n        query: query\n      },\n      rangeRaw: options.rangeRaw\n    };\n\n    return this.doRequest({\n      url: this.url + '/annotations',\n      method: 'POST',\n      data: annotationQuery\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n  metricFindQuery(query,suburl) {\n    var interpolated = {\n        target: this.templateSrv.replace(query, null, 'regex')\n    };\n\n    return this.doRequest({\n      url: this.url + suburl,\n      data: interpolated,\n      method: 'GET',\n    }).then(this.mapToTextValue);\n  }\n\n  mapToTextValue(result) {\n    return _.map(result.data.value, (data,index) => {\n      return {\n        text: data.name,\n        value: data['@iot.id']\n      };\n    });\n    // return _.map(result.data, (d, i) => {\n    //   if (d && d.text && d.value) {\n    //     return { text: d.text, value: d.value };\n    //   } else if (_.isObject(d)) {\n    //     return { text: d, value: i};\n    //   }\n    //   return { text: d, value: d };\n    // });\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n\n    return this.backendSrv.datasourceRequest(options);\n\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.target !== 'select metric';\n    });\n\n    var targets = _.map(options.targets, target => {\n      return {\n        target: this.templateSrv.replace(target.target, options.scopedVars, 'regex'),\n        refId: target.refId,\n        hide: target.hide,\n        type: target.type || 'timeserie'\n      };\n    });\n\n    options.targets = targets;\n    return options;\n  }\n}\n"]}
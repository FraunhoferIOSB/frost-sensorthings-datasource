{"version":3,"sources":["../src/datasource.js"],"names":["_","moment","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","withCredentials","headers","basicAuth","length","options","key","from","range","local","format","to","delay","start","Date","getTime","targets","filter","target","hide","allPromises","find","forEach","targetIndex","self","suburl","selectedThingId","timeFilter","getTimeFilter","push","doRequest","method","then","response","transformLocationsCoordinates","data","value","bind","Promise","all","values","allCoordinates","concat","allTargetResults","isEqual","selectedLocationId","selectedDatastreamId","transformedResults","transformThings","transformLocations","transformDataSource","result","timestamp","lastLocation","lastLocationValue","index","Locations","location","locationIndex","time","coordinates","selectedThingName","selectedDatastreamName","toString","map","panelType","isEmpty","parseInt","resultTime","subtract","utcOffset","selectedLocationName","Thing","status","message","title","query","replace","annotation","annotationQuery","datasource","enable","iconColor","rangeRaw","transformMetrics","metrics","placeholder","transformedMetrics","text","metric","datasourceRequest","dsTarget","scopedVars","refId"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport moment from \"moment\";\nexport class GenericDatasource {\n\n    constructor(instanceSettings, $q, backendSrv, templateSrv) {\n\n        this.type = instanceSettings.type;\n        this.url = instanceSettings.url;\n        this.name = instanceSettings.name;\n        this.q = $q;\n        this.backendSrv = backendSrv;\n        this.templateSrv = templateSrv;\n        this.withCredentials = instanceSettings.withCredentials;\n        this.headers = {'Content-Type': 'application/json'};\n        if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n            this.headers['Authorization'] = instanceSettings.basicAuth;\n        }\n    }\n\n    getTimeFilter(options,key){\n        let from = options.range.from.local().format(\"YYYY-MM-DDTHH:mm:ss.SSS\")+\"Z\";\n        let to = options.range.to.local().format(\"YYYY-MM-DDTHH:mm:ss.SSS\")+\"Z\";\n        return key + \" gt \" + from + \" and \"+ key + \" lt \" + to;\n    }\n\n    sleep(delay) {\n        var start = new Date().getTime();\n        while (new Date().getTime() < start + delay){\n        };\n    }\n\n    query(options) {\n\n//         let allCoordinates = [ { \"key\": \"fraunhofer cafeteria\", \"latitude\": 50.7495107, \"longitude\": 7.1948428, \"name\": \"fraunhofer cafeteria\",value:2 }, { \"key\": \"charleroi\", \"latitude\": 50.4108, \"longitude\": 4.4446, \"name\": \"Charleroi\",value:3}, { \"key\": \"frankfurt\", \"latitude\": 50.110924, \"longitude\": 8.682127, \"name\": \"Frankfurt\", }, { \"key\": \"london\", \"latitude\": 51.503399, \"longitude\": -0.119519, \"name\": \"London\", }, { \"key\": \"paris\", \"latitude\": 48.864716, \"longitude\": 2.349014, \"name\": \"Paris\" } ];\n// return {data: allCoordinates};\n        // Filter targets that are set to hidden\n        options.targets = _.filter(options.targets, target => {\n            return target.hide != true;\n        });\n\n        let allPromises = [];\n\n        if (_.find(options.targets, {\"panelType\" : 'grafana-worldmap-panel'})) {\n            _.forEach(options.targets,function(target,targetIndex){\n                let self = this;\n                let suburl = '';\n\n                if (target.selectedThingId == 0) return;\n                let timeFilter = this.getTimeFilter(options,\"time\");\n                suburl = '/Things(' + target.selectedThingId + ')/HistoricalLocations?'+'$filter='+timeFilter+'&$expand=Locations';\n\n                allPromises.push(this.doRequest({\n                    url: this.url + suburl,\n                    method: 'GET'\n                }).then(function(response){\n                    return self.transformLocationsCoordinates(target,targetIndex,response.data.value);\n                }));\n\n            }.bind(this));\n\n            return Promise.all(allPromises).then(function(values) {\n                let allCoordinates = [];\n                _.forEach(values,function(value){\n                    allCoordinates = allCoordinates.concat(value);\n                });\n                return {data: allCoordinates};\n            });\n        }\n\n        let self = this;\n        let allTargetResults = {data:[]};\n\n\n        // /Datastreams(16)/Observations?$filter=phenomenonTime%20gt%202018-03-14T16:00:12.749Z%20and%20phenomenonTime%20lt%202018-03-14T17:00:12.749Z&$select=result,phenomenonTime\n\n        _.forEach(options.targets,function(target){\n            let self = this;\n            let suburl = '';\n\n            if (_.isEqual(target.type,\"Location(HL)\")) {\n                if (target.selectedLocationId == 0) return;\n                let timeFilter = this.getTimeFilter(options,\"time\");\n                suburl = '/Locations(' + target.selectedLocationId + ')/HistoricalLocations?'+'$filter='+timeFilter+'&$expand=Things';\n            } else if(_.isEqual(target.type,\"Thing(HL)\")){\n                if (target.selectedThingId == 0) return;\n                let timeFilter = this.getTimeFilter(options,\"time\");\n                suburl = '/Things(' + target.selectedThingId + ')/HistoricalLocations?'+'$filter='+timeFilter+'&$expand=Locations';\n            } else {\n                if (target.selectedDatastreamId == 0) return;\n                let timeFilter = this.getTimeFilter(options,\"phenomenonTime\");\n                suburl = '/Datastreams('+target.selectedDatastreamId+')/Observations?'+'$filter='+timeFilter;\n            }\n\n            allPromises.push(this.doRequest({\n                url: this.url + suburl,\n                method: 'GET'\n            }).then(function(response){\n                let transformedResults = [];\n                if (_.isEqual(target.type,\"Location(HL)\")) {\n                    transformedResults = self.transformThings(target,response.data.value);\n                } else if(_.isEqual(target.type,\"Thing(HL)\")){\n                    transformedResults = self.transformLocations(target,response.data.value);\n                } else {\n                    transformedResults = self.transformDataSource(target,response.data.value);\n                }\n                return transformedResults;\n            }));\n\n        }.bind(this));\n\n        return Promise.all(allPromises).then(function(values) {\n            _.forEach(values,function(value){\n                allTargetResults.data.push(value);\n            });\n            return allTargetResults;\n        });\n    }\n\n    transformLocationsCoordinates(target,targetIndex,values){\n        let result = [];\n        let timestamp = \"\";\n        let lastLocation = false;\n        let lastLocationValue = \"\";\n        _.forEach(values,function(value,index) {\n            _.forEach(value.Locations,function(location,locationIndex) {\n                timestamp = moment(value.time,\"YYYY-MM-DDTHH:mm:ss.SSSZ\").format('YYYY-MM-DD HH:mm:ss.SSS');\n                lastLocationValue = (!lastLocation) ? (\"(Last seen)\") : \"\";\n                result.push({\n                            \"key\": location.name,\n                            \"latitude\": location.location.coordinates[0],\n                            \"longitude\": location.location.coordinates[1],\n                            \"name\": location.name + \" | \" +target.selectedThingName + \" | \" + timestamp + lastLocationValue,\n                            \"value\": targetIndex+1,\n                        });\n                if (index == 0 && locationIndex == 0 ) {\n                    lastLocation = true;\n                }\n            });\n        });\n        return result;\n    }\n\n    transformDataSource(target,values){\n        return {\n            'target' : target.selectedDatastreamName.toString(),\n            'datapoints' : _.map(values,function(value,index){\n                if (target.panelType == \"table\") {\n                    return [_.isEmpty(value.result.toString()) ? '-' : value.result ,parseInt(moment(value.resultTime,\"YYYY-MM-DDTHH:mm:ss.SSSZ\").subtract(moment().utcOffset(),'minutes').format('x'))];\n                }\n                // graph panel type expects the value in float/double/int and not as strings\n                return [value.result,parseInt(moment(value.resultTime,\"YYYY-MM-DDTHH:mm:ss.SSSZ\").subtract(moment().utcOffset(),'minutes').format('x'))];\n                // return [value.result,parseInt(moment(value.resultTime,\"YYYY-MM-DDTHH:mm:ss.SSSZ\").format('x'))];\n            })\n        };\n    }\n\n    transformThings(target,values){\n        return {\n            'target' : target.selectedLocationName.toString(),\n            'datapoints' : _.map(values,function(value,index){\n                return [_.isEmpty(value.Thing.name) ? '-' : value.Thing.name,parseInt(moment(value.time,\"YYYY-MM-DDTHH:mm:ss.SSSZ\").subtract(moment().utcOffset(),'minutes').format('x'))];\n                // return [_.isEmpty(value.Thing.name) ? '-' : value.Thing.name,parseInt(moment(value.time,\"YYYY-MM-DDTHH:mm:ss.SSSZ\").format('x'))];\n            })\n        };\n    }\n\n    transformLocations(target,values) {\n        let result = [];\n        _.forEach(values,function(value) {\n            _.forEach(value.Locations,function(location) {\n                result.push([_.isEmpty(location.name) ? '-' : location.name,parseInt(moment(value.time,\"YYYY-MM-DDTHH:mm:ss.SSSZ\").subtract(moment().utcOffset(),'minutes').format('x'))]);\n                // result.push([_.isEmpty(location.name) ? '-' : location.name,parseInt(moment(value.time,\"YYYY-MM-DDTHH:mm:ss.SSSZ\").format('x'))]);\n            });\n        });\n        return {\n            'target' : target.selectedThingName.toString(),\n            'datapoints' : result\n        };\n    }\n\n    testDatasource() {\n        return this.doRequest({\n            url: this.url,\n            method: 'GET',\n        }).then(response => {\n            if (response.status === 200) {\n                return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n            }\n        });\n    }\n\n    annotationQuery(options) {\n        var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n        var annotationQuery = {\n            range: options.range,\n            annotation: {\n                name: options.annotation.name,\n                datasource: options.annotation.datasource,\n                enable: options.annotation.enable,\n                iconColor: options.annotation.iconColor,\n                query: query\n            },\n            rangeRaw: options.rangeRaw\n        };\n\n        return this.doRequest({\n            url: this.url + '/annotations',\n            method: 'POST',\n            data: annotationQuery\n        }).then(result => {\n            return result.data;\n        });\n    }\n\n    metricFindQuery(query,suburl,type) {\n        return this.doRequest({\n            url: this.url + suburl,\n            method: 'GET',\n        }).then((result) => {\n            return this.transformMetrics(result.data.value,type);\n        });\n    }\n\n    transformMetrics(metrics,type) {\n        let placeholder = \"select a sensor\";\n        if (type == \"thing\") {\n            placeholder = \"select a thing\";\n        } else if (type == \"datastream\") {\n            placeholder = \"select a datastream\";\n        } else if (type == \"location\") {\n            placeholder = \"select a location\";\n        }\n        let transformedMetrics = [{\n            text: placeholder,\n            value: 0\n        }];\n        _.forEach(metrics, (metric,index) => {\n            transformedMetrics.push({\n                text: metric.name + \" ( \" + metric['@iot.id'] + \" )\",\n                value: metric['@iot.id']\n            });\n        });\n        return transformedMetrics;\n    }\n\n    doRequest(options) {\n        options.withCredentials = this.withCredentials;\n        options.headers = this.headers;\n\n        return this.backendSrv.datasourceRequest(options);\n\n    }\n\n    buildQueryParameters(options) {\n        //remove placeholder targets\n        options.targets = _.filter(options.targets, target => {\n            return target.dsTarget !== 'select metric';\n        });\n\n        var targets = _.map(options.targets, target => {\n            return {\n                target: this.templateSrv.replace(target.dsTarget.toString(), options.scopedVars, 'regex') ,\n                refId: target.refId,\n                hide: target.hide,\n                type: target.type || 'timeserie'\n            };\n        });\n\n        options.targets = targets;\n        return options;\n    }\n}\n"]}
{"version":3,"sources":["../src/datasource.js"],"names":["_","moment","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","withCredentials","headers","basicAuth","length","options","from","range","format","to","delay","start","Date","getTime","targets","filter","target","hide","allPromises","allTargetResults","data","self","timeFilter","getTimeFilter","forEach","push","doRequest","datastreamID","method","then","response","filtered","map","value","index","result","parseInt","resultTime","dsTarget","toString","bind","Promise","all","values","status","message","title","query","replace","annotation","annotationQuery","datasource","enable","iconColor","rangeRaw","suburl","mapToTextValue","text","id","datasourceRequest","scopedVars","refId","console","log"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport moment from \"moment\";\nexport class GenericDatasource {\n\n    constructor(instanceSettings, $q, backendSrv, templateSrv) {\n\n        this.type = instanceSettings.type;\n        this.url = instanceSettings.url;\n        this.name = instanceSettings.name;\n        this.q = $q;\n        this.backendSrv = backendSrv;\n        this.templateSrv = templateSrv;\n        this.withCredentials = instanceSettings.withCredentials;\n        this.headers = {'Content-Type': 'application/json'};\n        if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n            this.headers['Authorization'] = instanceSettings.basicAuth;\n        }\n    }\n\n    getTimeFilter(options){\n        let from = options.range.from.format(\"YYYY-MM-DDTHH:mm:ss.SSS\")+\"Z\";\n        let to = options.range.to.format(\"YYYY-MM-DDTHH:mm:ss.SSS\")+\"Z\";\n        return \"phenomenonTime gt \" + from + \" and phenomenonTime lt \" + to;\n    }\n    sleep(delay) {\n        var start = new Date().getTime();\n        while (new Date().getTime() < start + delay){\n\n        };\n    }\n    query(options) {\n\n        // Filter targets that are set to hidden\n        options.targets = _.filter(options.targets, target => {\n            return target.hide != true;\n        });\n\n        let allPromises = [];\n        let allTargetResults = {data:[]};\n        let self = this;\n        let timeFilter = this.getTimeFilter(options);\n\n        // /Datastreams(16)/Observations?$filter=phenomenonTime%20gt%202018-03-14T16:00:12.749Z%20and%20phenomenonTime%20lt%202018-03-14T17:00:12.749Z&$select=result,phenomenonTime\n\n        _.forEach(options.targets,function(target){\n            allPromises.push(this.doRequest({\n                url: this.url + '/Datastreams('+target.datastreamID+')/Observations?'+'$filter='+timeFilter,\n                // data: query,\n                method: 'GET'\n            }).then(function(response){\n                let filtered = _.map(response.data.value,function(value,index){\n                    return [value.result,parseInt(moment(value.resultTime,\"YYYY-MM-DDTHH:mm:ss.SSSZ\").format('x'))];\n                });\n                return {\n                    'target' : target.dsTarget.toString(),\n                    'datapoints' : filtered\n                };\n            }));\n\n        }.bind(this));\n\n        return Promise.all(allPromises).then(function(values) {\n            _.forEach(values,function(value){\n                allTargetResults.data.push(value);\n            });\n            return allTargetResults;\n        });\n    }\n\n    testDatasource() {\n        return this.doRequest({\n            url: this.url,\n            method: 'GET',\n        }).then(response => {\n            if (response.status === 200) {\n                return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n            }\n        });\n    }\n\n    annotationQuery(options) {\n        var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n        var annotationQuery = {\n            range: options.range,\n            annotation: {\n                name: options.annotation.name,\n                datasource: options.annotation.datasource,\n                enable: options.annotation.enable,\n                iconColor: options.annotation.iconColor,\n                query: query\n            },\n            rangeRaw: options.rangeRaw\n        };\n\n        return this.doRequest({\n            url: this.url + '/annotations',\n            method: 'POST',\n            data: annotationQuery\n        }).then(result => {\n            return result.data;\n        });\n    }\n\n    metricFindQuery(query,suburl) {\n        // var interpolated = {\n        //     target: this.templateSrv.replace(query, null, 'regex')\n        // };\n\n        return this.doRequest({\n            url: this.url + suburl,\n            // data: interpolated,\n            method: 'GET',\n        }).then(this.mapToTextValue);\n    }\n\n    mapToTextValue(result) {\n        return _.map(result.data.value, (data,index) => {\n            return {\n                text: data.name + \" ( \" + data['@iot.id'] + \" )\",\n                value: data.name + \" ( \" + data['@iot.id'] + \" )\",\n                id: data['@iot.id']\n            };\n        });\n    }\n\n    doRequest(options) {\n        options.withCredentials = this.withCredentials;\n        options.headers = this.headers;\n\n        return this.backendSrv.datasourceRequest(options);\n\n    }\n\n    buildQueryParameters(options) {\n        //remove placeholder targets\n        options.targets = _.filter(options.targets, target => {\n            return target.dsTarget !== 'select metric';\n        });\n\n        var targets = _.map(options.targets, target => {\n            return {\n                target: this.templateSrv.replace(target.dsTarget.toString(), options.scopedVars, 'regex') ,\n                refId: target.refId,\n                hide: target.hide,\n                type: target.type || 'timeserie'\n            };\n        });\n\n        options.targets = targets;\n        console.log(options);\n        return options;\n    }\n}\n"]}
{"version":3,"sources":["../src/datasource.js"],"names":["_","moment","JSONPath","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","alertSrv","contextSrv","dashboardSrv","type","url","name","q","withCredentials","headers","notificationShowTime","topCount","basicAuth","length","options","key","from","range","utc","format","to","id","Number","isInteger","isNaN","targets","filter","target","hide","allPromises","find","forEach","targetIndex","self","suburl","selectedThingId","timeFilter","getTimeFilter","getFormatedId","push","doRequest","method","then","response","transformLocationsCoordinates","data","value","bind","Promise","all","values","allCoordinates","concat","allTargetResults","testPromises","map","thisTargetResult","selectedDatastreamName","toString","selectedDatastreamDirty","isEqual","selectedLocationId","selectedDatastreamId","transformedResults","hasNextLink","fullUrl","has","split","transformThings","transformLocations","transformDataSource","datapoints","console","error","Array","isArray","log","locationName","Locations","location","coordinates","geometry","selectedThingName","time","isOmObservationType","selectedDatastreamObservationType","isEmpty","jsonQuery","index","result","json","path","panelType","JSON","stringify","parseInt","phenomenonTime","datapoint","includes","Thing","status","message","title","query","placeholder","transformedMetrics","text","selectParam","transformMetrics","metrics","metric","datasourceRequest"],"mappings":";;;;;;;;;;;;;;;AAAOA,a;;AACAC,kB;;AAECC,oB,uBAAAA,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;yCACKC,iB;AAET,2CAAYC,gBAAZ,EAA8BC,EAA9B,EAAkCC,UAAlC,EAA8CC,WAA9C,EAA2DC,QAA3D,EAAqEC,UAArE,EAAiFC,YAAjF,EAA+F;AAAA;;AAE3F,yBAAKC,IAAL,GAAYP,iBAAiBO,IAA7B;AACA,yBAAKC,GAAL,GAAWR,iBAAiBQ,GAA5B;AACA,yBAAKC,IAAL,GAAYT,iBAAiBS,IAA7B;AACA,yBAAKC,CAAL,GAAST,EAAT;AACA,yBAAKC,UAAL,GAAkBA,UAAlB;AACA,yBAAKC,WAAL,GAAmBA,WAAnB;AACA,yBAAKQ,eAAL,GAAuBX,iBAAiBW,eAAxC;AACA,yBAAKC,OAAL,GAAe,EAAE,gBAAgB,kBAAlB,EAAf;AACA,yBAAKR,QAAL,GAAgBA,QAAhB;AACA,yBAAKC,UAAL,GAAkBA,UAAlB;AACA,yBAAKC,YAAL,GAAoBA,YAApB;AACA,yBAAKO,oBAAL,GAA4B,IAA5B;AACA,yBAAKC,QAAL,GAAgB,IAAhB;AACA,wBAAI,OAAOd,iBAAiBe,SAAxB,KAAsC,QAAtC,IAAkDf,iBAAiBe,SAAjB,CAA2BC,MAA3B,GAAoC,CAA1F,EAA6F;AACzF,6BAAKJ,OAAL,CAAa,eAAb,IAAgCZ,iBAAiBe,SAAjD;AACH;AACJ;;;;kDAEaE,O,EAASC,G,EAAK;AACxB,4BAAIC,OAAOF,QAAQG,KAAR,CAAcD,IAAd,CAAmBE,GAAnB,GAAyBC,MAAzB,CAAgC,yBAAhC,IAA6D,GAAxE;AACA,4BAAIC,KAAKN,QAAQG,KAAR,CAAcG,EAAd,CAAiBF,GAAjB,GAAuBC,MAAvB,CAA8B,yBAA9B,IAA2D,GAApE;AACA,+BAAOJ,MAAM,MAAN,GAAeC,IAAf,GAAsB,OAAtB,GAAgCD,GAAhC,GAAsC,MAAtC,GAA+CK,EAAtD;AACH;;;kDAEaC,E,EAAI;AACd,+BAAQC,OAAOC,SAAP,CAAiBF,EAAjB,KAAwB,CAACG,MAAMH,EAAN,CAA1B,GAAuCA,EAAvC,GAA4C,MAAMA,EAAN,GAAW,GAA9D;AACH;;;0CAEKP,O,EAAS;AAAA;;AAEXA,gCAAQW,OAAR,GAAkBhC,EAAEiC,MAAF,CAASZ,QAAQW,OAAjB,EAA0B;AAAA,mCAAUE,OAAOC,IAAP,KAAgB,IAA1B;AAAA,yBAA1B,CAAlB;;AAEA,4BAAIC,cAAc,EAAlB;;AAEA,4BAAIpC,EAAEqC,IAAF,CAAOhB,QAAQW,OAAf,EAAwB,EAAE,aAAa,mBAAf,EAAxB,CAAJ,EAAmE;AAC/DhC,8BAAEsC,OAAF,CAAUjB,QAAQW,OAAlB,EAA2B,UAAUE,MAAV,EAAkBK,WAAlB,EAA+B;AACtD,oCAAIC,OAAO,IAAX;AACA,oCAAIC,SAAS,EAAb;;AAEA,oCAAIP,OAAOQ,eAAP,KAA2B,CAA/B,EAAkC;AAC9B;AACH;AACD,oCAAIC,aAAa,KAAKC,aAAL,CAAmBvB,OAAnB,EAA4B,MAA5B,CAAjB;AACAoB,yCAAS,aAAa,KAAKI,aAAL,CAAmBX,OAAOQ,eAA1B,CAAb,GAA0D,wBAA1D,GAAqF,UAArF,GAAkGC,UAAlG,GAA+G,+DAAxH;;AAEAP,4CAAYU,IAAZ,CAAiB,KAAKC,SAAL,CAAe;AAC5BnC,yCAAK,KAAKA,GAAL,GAAW6B,MADY;AAE5BO,4CAAQ;AAFoB,iCAAf,EAGdC,IAHc,CAGT,UAAUC,QAAV,EAAoB;AACxB,2CAAOV,KAAKW,6BAAL,CAAmCjB,MAAnC,EAA2CgB,SAASE,IAAT,CAAcC,KAAzD,CAAP;AACH,iCALgB,CAAjB;AAOH,6BAjB0B,CAiBzBC,IAjByB,CAiBpB,IAjBoB,CAA3B;;AAmBA,mCAAOC,QAAQC,GAAR,CAAYpB,WAAZ,EAAyBa,IAAzB,CAA8B,UAAUQ,MAAV,EAAkB;AACnD,oCAAIC,iBAAiB,EAArB;AACA1D,kCAAEsC,OAAF,CAAUmB,MAAV,EAAkB,UAAUJ,KAAV,EAAiB;AAC/BK,qDAAiBA,eAAeC,MAAf,CAAsBN,KAAtB,CAAjB;AACH,iCAFD;AAGA,uCAAO,EAAED,MAAMM,cAAR,EAAP;AACH,6BANM,CAAP;AAOH;;AAED,4BAAIE,mBAAmB,EAAER,MAAM,EAAR,EAAvB;;AAEA,4BAAIS,eAAexC,QAAQW,OAAR,CAAgB8B,GAAhB,CAAoB,gBAAM5B,MAAN,EAAgB;;AAEnD,gCAAIM,OAAO,KAAX;AACA,gCAAIC,SAAS,EAAb;AACA,gCAAIsB,mBAAmB;AACnB,0CAAU7B,OAAO8B,sBAAP,CAA8BC,QAA9B,EADS;AAEnB,8CAAc;AAFK,6BAAvB;;AAKA,gCAAI/B,OAAOgC,uBAAX,EAAoC;AAChC,uCAAOH,gBAAP;AACH;;AAED,gCAAI/D,EAAEmE,OAAF,CAAUjC,OAAOvB,IAAjB,EAAuB,WAAvB,CAAJ,EAAyC;AACrC,oCAAIuB,OAAOkC,kBAAP,KAA8B,CAAlC,EAAqC;AACjC,2CAAOL,gBAAP;AACH;AACD,oCAAIpB,aAAa,MAAKC,aAAL,CAAmBvB,OAAnB,EAA4B,MAA5B,CAAjB;AACAoB,yCAAS,gBAAgB,MAAKI,aAAL,CAAmBX,OAAOkC,kBAA1B,CAAhB,GAAgE,wBAAhE,GAA2F,UAA3F,GAAwGzB,UAAxG,GAAqH,4CAA9H;AACH,6BAND,MAMO,IAAI3C,EAAEmE,OAAF,CAAUjC,OAAOvB,IAAjB,EAAuB,sBAAvB,CAAJ,EAAoD;AACvD,oCAAIuB,OAAOQ,eAAP,KAA2B,CAA/B,EAAkC;AAC9B,2CAAOqB,gBAAP;AACH;AACD,oCAAIpB,cAAa,MAAKC,aAAL,CAAmBvB,OAAnB,EAA4B,MAA5B,CAAjB;AACAoB,yCAAS,aAAa,MAAKI,aAAL,CAAmBX,OAAOQ,eAA1B,CAAb,GAA0D,wBAA1D,GAAqF,UAArF,GAAkGC,WAAlG,GAA+G,+CAAxH;AACH,6BANM,MAMA;AACH,oCAAIT,OAAOmC,oBAAP,KAAgC,CAApC,EAAuC;AACnC,2CAAON,gBAAP;AACH;AACD,oCAAIpB,eAAa,MAAKC,aAAL,CAAmBvB,OAAnB,EAA4B,gBAA5B,CAAjB;AACAoB,yCAAS,kBAAkB,MAAKI,aAAL,CAAmBX,OAAOmC,oBAA1B,CAAlB,GAAoE,iBAApE,iBAAmG1B,YAAnG,oCAAT;AACH;;AAED,gCAAI2B,qBAAqB,EAAzB;AACA,gCAAIC,cAAc,IAAlB;AACA,gCAAIC,UAAU,MAAK5D,GAAL,GAAW6B,MAAX,eAA6B,MAAKvB,QAAlC,CAAd;;AAEA,mCAAOqD,WAAP,EAAoB;AAChB,oCAAIrB,WAAW,MAAM,MAAKH,SAAL,CAAe;AAChCnC,yCAAK4D,OAD2B;AAEhCxB,4CAAQ;AAFwB,iCAAf,CAArB;;AAKAuB,8CAAcvE,EAAEyE,GAAF,CAAMvB,SAASE,IAAf,EAAqB,eAArB,CAAd;;AAEA,oCAAImB,WAAJ,EAAiB;AACb9B,6CAASA,OAAOiC,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAT;AACAF,8CAAU,MAAK5D,GAAL,GAAW6B,MAAX,GAAoB,GAApB,GAA0BS,SAASE,IAAT,CAAc,eAAd,EAA+BsB,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAApC;AACH;;AAED,oCAAI1E,EAAEmE,OAAF,CAAUjC,OAAOvB,IAAjB,EAAuB,WAAvB,CAAJ,EAAyC;AACrC2D,yDAAqBA,mBAAmBX,MAAnB,CAA0BnB,KAAKmC,eAAL,CAAqBzC,MAArB,EAA6BgB,SAASE,IAAT,CAAcC,KAA3C,CAA1B,CAArB;AACH,iCAFD,MAEO,IAAIrD,EAAEmE,OAAF,CAAUjC,OAAOvB,IAAjB,EAAuB,sBAAvB,CAAJ,EAAoD;AACvD2D,yDAAqBA,mBAAmBX,MAAnB,CAA0BnB,KAAKoC,kBAAL,CAAwB1C,MAAxB,EAAgCgB,SAASE,IAAT,CAAcC,KAA9C,CAA1B,CAArB;AACH,iCAFM,MAEA;AACHiB,yDAAqBA,mBAAmBX,MAAnB,CAA0BnB,KAAKqC,mBAAL,CAAyB3C,MAAzB,EAAiCgB,SAASE,IAAT,CAAcC,KAA/C,CAA1B,CAArB;AACH;AACJ;;AAEDU,6CAAiBe,UAAjB,GAA8BR,kBAA9B;;AAEA,mCAAOP,gBAAP;AAEH,yBA/DkB,CAAnB;;AAiEA,+BAAOR,QAAQC,GAAR,CAAYK,YAAZ,EAA0BZ,IAA1B,CAA+B,UAAUQ,MAAV,EAAkB;AACpDG,6CAAiBR,IAAjB,GAAwBK,MAAxB;AACA,mCAAOG,gBAAP;AACH,yBAHM,CAAP;AAKH;;;kEAE6B1B,M,EAAQmB,K,EAAO;AACzC,4BAAI,CAACA,KAAL,EAAY;AACR0B,oCAAQC,KAAR,CAAc,qCAAqC9C,OAAOQ,eAA1D;AACA,mCAAO,EAAP;AACH;;AAED,4BAAIuC,MAAMC,OAAN,CAAc7B,KAAd,CAAJ,EAA0B;AACtB,gCAAIA,MAAMjC,MAAN,KAAiB,CAArB,EAAwB;AACpB2D,wCAAQI,GAAR,CAAY,2BAA2BjD,OAAOQ,eAA9C;AACA,uCAAO,EAAP;AACH,6BAHD,MAGO;AACHW,wCAAQA,MAAM,CAAN,CAAR;AACH;AACJ;;AAED,4BAAI+B,eAAe/B,MAAMgC,SAAN,CAAgB,CAAhB,EAAmBxE,IAAtC;AACA,4BAAIyE,WAAWjC,MAAMgC,SAAN,CAAgB,CAAhB,EAAmBC,QAAlC;AACA,4BAAIC,oBAAJ;AACA,4BAAID,SAAS3E,IAAT,KAAkB,SAAlB,IAA+B2E,SAASE,QAAT,CAAkB7E,IAAlB,KAA2B,OAA9D,EAAuE;AACnE4E,0CAAcD,SAASE,QAAT,CAAkBD,WAAhC;AACH,yBAFD,MAEO,IAAID,SAAS3E,IAAT,KAAkB,OAAtB,EAA+B;AAClC4E,0CAAcD,SAASC,WAAvB;AACH,yBAFM,MAEA;AACHR,oCAAQC,KAAR,CAAc,yCAAyC9C,OAAOQ,eAAhD,GAAkE,4CAAhF;AACA,mCAAO,EAAP;AACH;;AAED,+BAAO;AACH,sCAAUR,OAAO8B,sBAAP,CAA8BC,QAA9B,EADP;AAEH,oCAAQ,MAFL;AAGH,0CAAc,CAAC;AACX,uCAAOmB,YADI;AAEX,6CAAaG,YAAY,CAAZ,CAFF,EAEkB;AAC7B,4CAAYA,YAAY,CAAZ,CAHD;AAIX,wCAAQH,eAAe,KAAf,GAAuBlD,OAAOuD,iBAA9B,GAAkD,KAAlD,GAA0DxF,OAAOoD,MAAMqC,IAAb,EAAmB,0BAAnB,EAA+ChE,MAA/C,CAAsD,yBAAtD;AAJvD,6BAAD;AAHX,yBAAP;AAUH;;;wDAEmBQ,M,EAAQuB,M,EAAQ;AAChC,4BAAIjB,OAAO,IAAX;;AAEA,4BAAIA,KAAKmD,mBAAL,CAAyBzD,OAAO0D,iCAAhC,KAAsE5F,EAAE6F,OAAF,CAAU3D,OAAO4D,SAAjB,CAA1E,EAAuG;AACnG,mCAAO,EAAP;AACH;;AAED,4BAAIhB,aAAa9E,EAAE8D,GAAF,CAAML,MAAN,EAAc,UAAUJ,KAAV,EAAiB0C,KAAjB,EAAwB;;AAEnD,gCAAIvD,KAAKmD,mBAAL,CAAyBzD,OAAO0D,iCAAhC,CAAJ,EAAwE;;AAEpE,oCAAII,SAAS,IAAI9F,QAAJ,CAAa,EAAE+F,MAAM5C,MAAM2C,MAAd,EAAsBE,MAAMhE,OAAO4D,SAAnC,EAAb,CAAb;;AAEA,oCAAI5D,OAAOiE,SAAP,KAAqB,OAArB,IAAgCjE,OAAOiE,SAAP,KAAqB,YAAzD,EAAuE;AACnEH,6CAAU,QAAOA,OAAO,CAAP,CAAP,MAAqB,QAAtB,GAAkCI,KAAKC,SAAL,CAAeL,OAAO,CAAP,CAAf,CAAlC,GAA8DA,OAAO,CAAP,CAAvE;AACA,2CAAO,CAACA,MAAD,EAASM,SAASrG,OAAOoD,MAAMkD,cAAb,EAA6B,0BAA7B,EAAyD7E,MAAzD,CAAgE,GAAhE,CAAT,CAAT,CAAP;AACH,iCAHD,MAGO;AACH,2CAAO,CAACsE,OAAO,CAAP,CAAD,EAAYM,SAASrG,OAAOoD,MAAMkD,cAAb,EAA6B,0BAA7B,EAAyD7E,MAAzD,CAAgE,GAAhE,CAAT,CAAZ,CAAP;AACH;AAEJ,6BAXD,MAWO;;AAEH,oCAAIQ,OAAOiE,SAAP,KAAqB,OAAzB,EAAkC;AAC9B,2CAAO,CAACnG,EAAE6F,OAAF,CAAUxC,MAAM2C,MAAN,CAAa/B,QAAb,EAAV,IAAqC,GAArC,GAA2CZ,MAAM2C,MAAlD,EAA0DM,SAASrG,OAAOoD,MAAMkD,cAAb,EAA6B,0BAA7B,EAAyD7E,MAAzD,CAAgE,GAAhE,CAAT,CAA1D,CAAP;AACH,iCAFD,MAEO;AACH,2CAAO,CAAC2B,MAAM2C,MAAP,EAAeM,SAASrG,OAAOoD,MAAMkD,cAAb,EAA6B,0BAA7B,EAAyD7E,MAAzD,CAAgE,GAAhE,CAAT,CAAf,CAAP;AACH;AAEJ;AACJ,yBAtBgB,CAAjB;;AAwBAoD,qCAAa9E,EAAEiC,MAAF,CAAS6C,UAAT,EAAqB,UAAU0B,SAAV,EAAqB;AACnD,mCAAQ,OAAOA,UAAU,CAAV,CAAP,KAAwB,QAAxB,IAAoC,OAAOA,UAAU,CAAV,CAAP,KAAwB,QAA5D,IAAyE3E,OAAO2E,UAAU,CAAV,CAAP,MAAyBA,UAAU,CAAV,CAAzB,IAAyCA,UAAU,CAAV,IAAe,CAAf,KAAqB,CAA/I;AACH,yBAFY,CAAb;;AAIA,+BAAO1B,UAAP;AACH;;;wDAEmBnE,I,EAAM;AACtB,4BAAIX,EAAE6F,OAAF,CAAUlF,IAAV,CAAJ,EAAqB;AACjB,mCAAO,KAAP;AACH;;AAED,4BAAI,CAACA,KAAK8F,QAAL,CAAc,gBAAd,CAAL,EAAsC;AAClC,mCAAO,KAAP;AACH;;AAED,+BAAO,IAAP;AACH;;;oDAEevE,M,EAAQuB,M,EAAQ;;AAE5B,+BAAOzD,EAAE8D,GAAF,CAAML,MAAN,EAAc,iBAAS;AAC1B,mCAAO,CAACzD,EAAE6F,OAAF,CAAUxC,MAAMqD,KAAN,CAAY7F,IAAtB,IAA8B,GAA9B,GAAoCwC,MAAMqD,KAAN,CAAY7F,IAAjD,EAAuDyF,SAASrG,OAAOoD,MAAMqC,IAAb,EAAmB,0BAAnB,EAA+ChE,MAA/C,CAAsD,GAAtD,CAAT,CAAvD,CAAP;AACH,yBAFM,CAAP;AAIH;;;uDAEkBQ,M,EAAQuB,M,EAAQ;AAC/B,4BAAIuC,SAAS,EAAb;AACAhG,0BAAEsC,OAAF,CAAUmB,MAAV,EAAkB,UAAUJ,KAAV,EAAiB;AAC/BrD,8BAAEsC,OAAF,CAAUe,MAAMgC,SAAhB,EAA2B,UAAUC,QAAV,EAAoB;AAC3CU,uCAAOlD,IAAP,CAAY,CAAC9C,EAAE6F,OAAF,CAAUP,SAASzE,IAAnB,IAA2B,GAA3B,GAAiCyE,SAASzE,IAA3C,EAAiDyF,SAASrG,OAAOoD,MAAMqC,IAAb,EAAmB,0BAAnB,EAA+ChE,MAA/C,CAAsD,GAAtD,CAAT,CAAjD,CAAZ;AACH,6BAFD;AAGH,yBAJD;AAKA,+BAAOsE,MAAP;AACH;;;qDAEgB;AACb,+BAAO,KAAKjD,SAAL,CAAe;AAClBnC,iCAAK,KAAKA,GADQ;AAElBoC,oCAAQ;AAFU,yBAAf,EAGJC,IAHI,CAGC,oBAAY;AAChB,gCAAIC,SAASyD,MAAT,KAAoB,GAAxB,EAA6B;AACzB,uCAAO,EAAEA,QAAQ,SAAV,EAAqBC,SAAS,wBAA9B,EAAwDC,OAAO,SAA/D,EAAP;AACH;AACJ,yBAPM,CAAP;AAQH;;;0DAEqBC,K,EAAOrE,M,EAAQ9B,I,EAAM;;AAEvC,4BAAIoG,cAAc,iBAAlB;;AAEA,4BAAIpG,SAAS,OAAb,EAAsB;AAClBoG,0CAAc,gBAAd;AACH,yBAFD,MAEO,IAAIpG,SAAS,YAAb,EAA2B;AAC9BoG,0CAAc,qBAAd;AACH,yBAFM,MAEA,IAAIpG,SAAS,UAAb,EAAyB;AAC5BoG,0CAAc,mBAAd;AACH;;AAED,4BAAIC,qBAAqB,CAAC;AACtBC,kCAAMF,WADgB;AAEtB1D,mCAAO,CAFe;AAGtB1C,kCAAM;AAHgB,yBAAD,CAAzB;;AAOA,4BAAI4D,cAAc,IAAlB;AACA,4BAAI2C,cAAevG,SAAS,YAAV,GAA0B,iCAA1B,GAA8D,iBAAhF;AACA,4BAAI6D,UAAU,KAAK5D,GAAL,GAAW6B,MAAX,eAA6B,KAAKvB,QAAlC,SAA8CgG,WAA9C,CAAd;;AAEA,+BAAO3C,WAAP,EAAoB;AAChB,gCAAIyB,SAAS,MAAM,KAAKjD,SAAL,CAAe;AAC9BnC,qCAAK4D,OADyB;AAE9BxB,wCAAQ;AAFsB,6BAAf,CAAnB;AAIAuB,0CAAcvE,EAAEyE,GAAF,CAAMuB,OAAO5C,IAAb,EAAmB,eAAnB,CAAd;AACA,gCAAImB,WAAJ,EAAiB;AACbC,0CAAU,KAAK5D,GAAL,GAAW6B,MAAX,GAAoB,GAApB,GAA0BuD,OAAO5C,IAAP,CAAY,eAAZ,EAA6BsB,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAApC;AACH;AACDsC,iDAAqBA,mBAAmBrD,MAAnB,CAA0B,KAAKwD,gBAAL,CAAsBnB,OAAO5C,IAAP,CAAYC,KAAlC,EAAyC1C,IAAzC,CAA1B,CAArB;AACH;;AAED,+BAAOqG,kBAAP;AACH;;;qDAEgBI,O,EAASzG,I,EAAM;;AAE5B,4BAAIqG,qBAAqB,EAAzB;;AAEAhH,0BAAEsC,OAAF,CAAU8E,OAAV,EAAmB,UAACC,MAAD,EAAStB,KAAT,EAAmB;AAClCiB,+CAAmBlE,IAAnB,CAAwB;AACpBmE,sCAAMI,OAAOxG,IAAP,GAAc,KAAd,GAAsBwG,OAAO,SAAP,CAAtB,GAA0C,IAD5B;AAEpBhE,uCAAOgE,OAAO,SAAP,CAFa;AAGpB1G,sCAAM0G,OAAO,iBAAP;AAHc,6BAAxB;AAKH,yBAND;;AAQA,+BAAOL,kBAAP;AACH;;;8CAES3F,O,EAAS;AACfA,gCAAQN,eAAR,GAA0B,KAAKA,eAA/B;AACAM,gCAAQL,OAAR,GAAkB,KAAKA,OAAvB;;AAEA,+BAAO,KAAKV,UAAL,CAAgBgH,iBAAhB,CAAkCjG,OAAlC,CAAP;AAEH","file":"datasource.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\n\nimport {JSONPath} from './external/jsonpath.js'; // copied with grunt\nexport class GenericDatasource {\n\n    constructor(instanceSettings, $q, backendSrv, templateSrv, alertSrv, contextSrv, dashboardSrv) {\n\n        this.type = instanceSettings.type;\n        this.url = instanceSettings.url;\n        this.name = instanceSettings.name;\n        this.q = $q;\n        this.backendSrv = backendSrv;\n        this.templateSrv = templateSrv;\n        this.withCredentials = instanceSettings.withCredentials;\n        this.headers = { 'Content-Type': 'application/json' };\n        this.alertSrv = alertSrv;\n        this.contextSrv = contextSrv;\n        this.dashboardSrv = dashboardSrv;\n        this.notificationShowTime = 5000;\n        this.topCount = 1000;\n        if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n            this.headers['Authorization'] = instanceSettings.basicAuth;\n        }\n    }\n\n    getTimeFilter(options, key) {\n        let from = options.range.from.utc().format('YYYY-MM-DDTHH:mm:ss.SSS') + 'Z';\n        let to = options.range.to.utc().format('YYYY-MM-DDTHH:mm:ss.SSS') + 'Z';\n        return key + ' gt ' + from + ' and ' + key + ' lt ' + to;\n    }\n\n    getFormatedId(id) {\n        return (Number.isInteger(id) || !isNaN(id)) ? id : '\"' + id + '\"';\n    }\n\n    query(options) {\n\n        options.targets = _.filter(options.targets, target => target.hide !== true);\n\n        let allPromises = [];\n\n        if (_.find(options.targets, { 'panelType': 'grafana-map-panel' })) {\n            _.forEach(options.targets, function (target, targetIndex) {\n                let self = this;\n                let suburl = '';\n\n                if (target.selectedThingId === 0) {\n                    return;\n                }\n                let timeFilter = this.getTimeFilter(options, 'time');\n                suburl = '/Things(' + this.getFormatedId(target.selectedThingId) + ')/HistoricalLocations?' + '$filter=' + timeFilter + '&$expand=Locations($select=name,location)&$top=1&$select=time';\n\n                allPromises.push(this.doRequest({\n                    url: this.url + suburl,\n                    method: 'GET'\n                }).then(function (response) {\n                    return self.transformLocationsCoordinates(target, response.data.value);\n                }));\n\n            }.bind(this));\n\n            return Promise.all(allPromises).then(function (values) {\n                let allCoordinates = [];\n                _.forEach(values, function (value) {\n                    allCoordinates = allCoordinates.concat(value);\n                });\n                return { data: allCoordinates };\n            });\n        }\n\n        let allTargetResults = { data: [] };\n\n        let testPromises = options.targets.map(async target => {\n\n            let self = this;\n            let suburl = '';\n            let thisTargetResult = {\n                'target': target.selectedDatastreamName.toString(),\n                'datapoints': [],\n            };\n\n            if (target.selectedDatastreamDirty) {\n                return thisTargetResult;\n            }\n\n            if (_.isEqual(target.type, 'Locations')) {\n                if (target.selectedLocationId === 0) {\n                    return thisTargetResult;\n                }\n                let timeFilter = this.getTimeFilter(options, 'time');\n                suburl = '/Locations(' + this.getFormatedId(target.selectedLocationId) + ')/HistoricalLocations?' + '$filter=' + timeFilter + '&$expand=Things($select=name)&$select=time';\n            } else if (_.isEqual(target.type, 'Historical Locations')) {\n                if (target.selectedThingId === 0) {\n                    return thisTargetResult;\n                }\n                let timeFilter = this.getTimeFilter(options, 'time');\n                suburl = '/Things(' + this.getFormatedId(target.selectedThingId) + ')/HistoricalLocations?' + '$filter=' + timeFilter + '&$expand=Locations($select=name)&$select=time';\n            } else {\n                if (target.selectedDatastreamId === 0) {\n                    return thisTargetResult;\n                }\n                let timeFilter = this.getTimeFilter(options, 'phenomenonTime');\n                suburl = '/Datastreams(' + this.getFormatedId(target.selectedDatastreamId) + ')/Observations?' + `$filter=${timeFilter}&$select=phenomenonTime,result`;\n            }\n\n            let transformedResults = [];\n            let hasNextLink = true;\n            let fullUrl = this.url + suburl + `&$top=${this.topCount}`;\n\n            while (hasNextLink) {\n                let response = await this.doRequest({\n                    url: fullUrl,\n                    method: 'GET'\n                });\n\n                hasNextLink = _.has(response.data, '@iot.nextLink');\n\n                if (hasNextLink) {\n                    suburl = suburl.split('?')[0];\n                    fullUrl = this.url + suburl + '?' + response.data['@iot.nextLink'].split('?')[1];\n                }\n\n                if (_.isEqual(target.type, 'Locations')) {\n                    transformedResults = transformedResults.concat(self.transformThings(target, response.data.value));\n                } else if (_.isEqual(target.type, 'Historical Locations')) {\n                    transformedResults = transformedResults.concat(self.transformLocations(target, response.data.value));\n                } else {\n                    transformedResults = transformedResults.concat(self.transformDataSource(target, response.data.value));\n                }\n            }\n\n            thisTargetResult.datapoints = transformedResults;\n\n            return thisTargetResult;\n\n        });\n\n        return Promise.all(testPromises).then(function (values) {\n            allTargetResults.data = values;\n            return allTargetResults;\n        });\n\n    }\n\n    transformLocationsCoordinates(target, value) {\n        if (!value) {\n            console.error('Invalid location data for Thing ' + target.selectedThingId);\n            return [];\n        }\n\n        if (Array.isArray(value)) {\n            if (value.length === 0) {\n                console.log('No location for Thing ' + target.selectedThingId);\n                return [];\n            } else {\n                value = value[0];\n            }\n        }\n\n        let locationName = value.Locations[0].name;\n        let location = value.Locations[0].location;\n        let coordinates;\n        if (location.type === 'Feature' && location.geometry.type === 'Point') {\n            coordinates = location.geometry.coordinates;\n        } else if (location.type === 'Point') {\n            coordinates = location.coordinates;\n        } else {\n            console.error('Unsupported location type for Thing ' + target.selectedThingId + '. Expected GeoJSON Feature.Point or Point.');\n            return [];\n        }\n\n        return {\n            'target': target.selectedDatastreamName.toString(),\n            'type': 'docs',\n            'datapoints': [{\n                'key': locationName,\n                'longitude': coordinates[0], // longitude is the first element\n                'latitude': coordinates[1],\n                'name': locationName + ' | ' + target.selectedThingName + ' | ' + moment(value.time, 'YYYY-MM-DDTHH:mm:ss.SSSZ').format('YYYY-MM-DD HH:mm:ss.SSS')\n            }],\n        };\n    }\n\n    transformDataSource(target, values) {\n        let self = this;\n\n        if (self.isOmObservationType(target.selectedDatastreamObservationType) && _.isEmpty(target.jsonQuery)) {\n            return [];\n        }\n\n        let datapoints = _.map(values, function (value, index) {\n\n            if (self.isOmObservationType(target.selectedDatastreamObservationType)) {\n\n                var result = new JSONPath({ json: value.result, path: target.jsonQuery });\n\n                if (target.panelType === 'table' || target.panelType === 'singlestat') {\n                    result = (typeof result[0] === 'object') ? JSON.stringify(result[0]) : result[0];\n                    return [result, parseInt(moment(value.phenomenonTime, 'YYYY-MM-DDTHH:mm:ss.SSSZ').format('x'))];\n                } else {\n                    return [result[0], parseInt(moment(value.phenomenonTime, 'YYYY-MM-DDTHH:mm:ss.SSSZ').format('x'))];\n                }\n\n            } else {\n\n                if (target.panelType === 'table') {\n                    return [_.isEmpty(value.result.toString()) ? '-' : value.result, parseInt(moment(value.phenomenonTime, 'YYYY-MM-DDTHH:mm:ss.SSSZ').format('x'))];\n                } else {\n                    return [value.result, parseInt(moment(value.phenomenonTime, 'YYYY-MM-DDTHH:mm:ss.SSSZ').format('x'))];\n                }\n\n            }\n        });\n\n        datapoints = _.filter(datapoints, function (datapoint) {\n            return (typeof datapoint[0] === 'string' || typeof datapoint[0] === 'number' || (Number(datapoint[0]) === datapoint[0] && datapoint[0] % 1 !== 0));\n        });\n\n        return datapoints;\n    }\n\n    isOmObservationType(type) {\n        if (_.isEmpty(type)) {\n            return false;\n        }\n\n        if (!type.includes('om_observation')) {\n            return false;\n        }\n\n        return true;\n    }\n\n    transformThings(target, values) {\n\n        return _.map(values, value => {\n            return [_.isEmpty(value.Thing.name) ? '-' : value.Thing.name, parseInt(moment(value.time, 'YYYY-MM-DDTHH:mm:ss.SSSZ').format('x'))];\n        });\n\n    }\n\n    transformLocations(target, values) {\n        let result = [];\n        _.forEach(values, function (value) {\n            _.forEach(value.Locations, function (location) {\n                result.push([_.isEmpty(location.name) ? '-' : location.name, parseInt(moment(value.time, 'YYYY-MM-DDTHH:mm:ss.SSSZ').format('x'))]);\n            });\n        });\n        return result;\n    }\n\n    testDatasource() {\n        return this.doRequest({\n            url: this.url,\n            method: 'GET',\n        }).then(response => {\n            if (response.status === 200) {\n                return { status: 'success', message: 'Data source is working', title: 'Success' };\n            }\n        });\n    }\n\n    async metricFindQuery(query, suburl, type) {\n\n        let placeholder = 'select a sensor';\n\n        if (type === 'thing') {\n            placeholder = 'select a thing';\n        } else if (type === 'datastream') {\n            placeholder = 'select a datastream';\n        } else if (type === 'location') {\n            placeholder = 'select a location';\n        }\n\n        let transformedMetrics = [{\n            text: placeholder,\n            value: 0,\n            type: ''\n        }];\n\n\n        let hasNextLink = true;\n        let selectParam = (type === 'datastream') ? '$select=name,id,observationType' : '$select=name,id';\n        let fullUrl = this.url + suburl + `?$top=${this.topCount}&${selectParam}`;\n\n        while (hasNextLink) {\n            let result = await this.doRequest({\n                url: fullUrl,\n                method: 'GET',\n            });\n            hasNextLink = _.has(result.data, '@iot.nextLink');\n            if (hasNextLink) {\n                fullUrl = this.url + suburl + '?' + result.data['@iot.nextLink'].split('?')[1];\n            }\n            transformedMetrics = transformedMetrics.concat(this.transformMetrics(result.data.value, type));\n        }\n\n        return transformedMetrics;\n    }\n\n    transformMetrics(metrics, type) {\n\n        let transformedMetrics = [];\n\n        _.forEach(metrics, (metric, index) => {\n            transformedMetrics.push({\n                text: metric.name + ' ( ' + metric['@iot.id'] + ' )',\n                value: metric['@iot.id'],\n                type: metric['observationType']\n            });\n        });\n\n        return transformedMetrics;\n    }\n\n    doRequest(options) {\n        options.withCredentials = this.withCredentials;\n        options.headers = this.headers;\n\n        return this.backendSrv.datasourceRequest(options);\n\n    }\n}"]}
{"version":3,"sources":["../src/datasource.js"],"names":["_","moment","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","withCredentials","headers","basicAuth","length","options","from","range","format","to","delay","start","Date","getTime","targets","filter","target","hide","allPromises","allTargetResults","data","self","timeFilter","getTimeFilter","forEach","suburl","isEqual","locationTarget","datastreamID","push","doRequest","method","then","response","transformedResults","transformThings","value","transformDataSource","bind","Promise","all","values","dsTarget","toString","map","index","result","parseInt","resultTime","selectedLocation","Thing","time","status","message","title","query","replace","annotation","annotationQuery","datasource","enable","iconColor","rangeRaw","mapToTextValue","allLocations","text","description","id","datasourceRequest","scopedVars","refId","console","log"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport moment from \"moment\";\nexport class GenericDatasource {\n\n    constructor(instanceSettings, $q, backendSrv, templateSrv) {\n\n        this.type = instanceSettings.type;\n        this.url = instanceSettings.url;\n        this.name = instanceSettings.name;\n        this.q = $q;\n        this.backendSrv = backendSrv;\n        this.templateSrv = templateSrv;\n        this.withCredentials = instanceSettings.withCredentials;\n        this.headers = {'Content-Type': 'application/json'};\n        if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n            this.headers['Authorization'] = instanceSettings.basicAuth;\n        }\n    }\n\n    getTimeFilter(options){\n        let from = options.range.from.format(\"YYYY-MM-DDTHH:mm:ss.SSS\")+\"Z\";\n        let to = options.range.to.format(\"YYYY-MM-DDTHH:mm:ss.SSS\")+\"Z\";\n        return \"phenomenonTime gt \" + from + \" and phenomenonTime lt \" + to;\n    }\n\n    sleep(delay) {\n        var start = new Date().getTime();\n        while (new Date().getTime() < start + delay){\n\n        };\n    }\n\n    query(options) {\n        // console.log(options);\n\n        // Filter targets that are set to hidden\n        options.targets = _.filter(options.targets, target => {\n            return target.hide != true;\n        });\n\n        let allPromises = [];\n        let allTargetResults = {data:[]};\n        let self = this;\n        let timeFilter = this.getTimeFilter(options);\n\n        // /Datastreams(16)/Observations?$filter=phenomenonTime%20gt%202018-03-14T16:00:12.749Z%20and%20phenomenonTime%20lt%202018-03-14T17:00:12.749Z&$select=result,phenomenonTime\n\n        _.forEach(options.targets,function(target){\n\n            let self = this;\n\n            let suburl = '';\n\n            if (_.isEqual(target.type,\"Location\")) {\n                if (target.locationTarget == 0) return;\n                suburl = '/Locations(' + target.locationTarget + ')/HistoricalLocations?$expand=Things';\n            } else {\n                if (target.datastreamID == 0) return;\n                suburl = '/Datastreams('+target.datastreamID+')/Observations?'+'$filter='+timeFilter;\n            }\n\n            allPromises.push(this.doRequest({\n                url: this.url + suburl,\n                method: 'GET'\n            }).then(function(response){\n                let transformedResults = [];\n                if (_.isEqual(target.type,\"Location\")) {\n                    transformedResults = self.transformThings(target,response.data.value);\n                } else {\n                    transformedResults = self.transformDataSource(target,response.data.value);\n                }\n                return transformedResults;\n            }));\n\n        }.bind(this));\n\n        return Promise.all(allPromises).then(function(values) {\n            _.forEach(values,function(value){\n                allTargetResults.data.push(value);\n            });\n            return allTargetResults;\n        });\n    }\n\n    transformDataSource(target,values){\n        return {\n            'target' : target.dsTarget.toString(),\n            'datapoints' : (values.length == 0) ? [] : _.map(values,function(value,index){\n                return [value.result,parseInt(moment(value.resultTime,\"YYYY-MM-DDTHH:mm:ss.SSSZ\").format('x'))];\n            })\n        };\n    }\n\n    transformThings(target,values){\n        return {\n            'target' : target.selectedLocation.toString(),\n            'datapoints' : (values.length == 0) ? [] : _.map(values,function(value,index){\n                return [value.Thing.name,parseInt(moment(value.time,\"YYYY-MM-DDTHH:mm:ss.SSSZ\").format('x'))];\n            })\n        };\n    }\n\n    testDatasource() {\n        return this.doRequest({\n            url: this.url,\n            method: 'GET',\n        }).then(response => {\n            if (response.status === 200) {\n                return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n            }\n        });\n    }\n\n    annotationQuery(options) {\n        var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n        var annotationQuery = {\n            range: options.range,\n            annotation: {\n                name: options.annotation.name,\n                datasource: options.annotation.datasource,\n                enable: options.annotation.enable,\n                iconColor: options.annotation.iconColor,\n                query: query\n            },\n            rangeRaw: options.rangeRaw\n        };\n\n        return this.doRequest({\n            url: this.url + '/annotations',\n            method: 'POST',\n            data: annotationQuery\n        }).then(result => {\n            return result.data;\n        });\n    }\n\n    metricFindQuery(query,suburl) {\n        // var interpolated = {\n        //     target: this.templateSrv.replace(query, null, 'regex')\n        // };\n\n        return this.doRequest({\n            url: this.url + suburl,\n            // data: interpolated,\n            method: 'GET',\n        }).then(this.mapToTextValue);\n    }\n\n    LocationFindQuery(query,suburl) {\n        return this.doRequest({\n            url: this.url + suburl,\n            // data: interpolated,\n            method: 'GET',\n        }).then((result) => {\n            let allLocations = [{\n                text: \"select a location\",\n                value: 0\n            }];\n            _.forEach(result.data.value, (data,index) => {\n                allLocations.push({\n                    text: data.name + \" ( \" + data.description + \" )\",\n                    value : data['@iot.id'],\n                });\n            });\n            return allLocations;\n        });\n    }\n\n    mapToTextValue(result) {\n        return _.map(result.data.value, (data,index) => {\n            return {\n                text: data.name + \" ( \" + data['@iot.id'] + \" )\",\n                value: data.name + \" ( \" + data['@iot.id'] + \" )\",\n                id: data['@iot.id']\n            };\n        });\n    }\n\n    doRequest(options) {\n        options.withCredentials = this.withCredentials;\n        options.headers = this.headers;\n\n        return this.backendSrv.datasourceRequest(options);\n\n    }\n\n    buildQueryParameters(options) {\n        //remove placeholder targets\n        options.targets = _.filter(options.targets, target => {\n            return target.dsTarget !== 'select metric';\n        });\n\n        var targets = _.map(options.targets, target => {\n            return {\n                target: this.templateSrv.replace(target.dsTarget.toString(), options.scopedVars, 'regex') ,\n                refId: target.refId,\n                hide: target.hide,\n                type: target.type || 'timeserie'\n            };\n        });\n\n        options.targets = targets;\n        console.log(options);\n        return options;\n    }\n}\n"]}
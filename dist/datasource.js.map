{"version":3,"sources":["../src/datasource.js"],"names":["_","moment","JSONPath","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","alertSrv","contextSrv","dashboardSrv","type","url","name","q","withCredentials","headers","notificationShowTime","topCount","basicAuth","length","options","key","from","range","utc","format","to","id","Number","isInteger","isNaN","targets","filter","target","hide","allTargetResults","data","testPromises","map","self","subUrl","thisTargetResult","selectedDatastreamName","toString","selectedDatastreamDirty","selectedLimit","limit","selectedLocationId","timeFilter","getTimeFilter","getFormatedId","selectedThingOption","selectedThingId","fetchData","transformToTable","columns","values","v","Locations","selectedDatastreamId","dataMergeDatastream","transformParseLoc","location","findDataResult","console","log","transformedResults","hasNextLink","fullUrl","response","doRequest","method","has","split","concat","transformThings","value","transformDataSource","datapoints","Promise","all","then","datastreamid","i","surl","sdata","result","isOmObservationType","selectedDatastreamObservationType","json","path","jsonQuery","JSON","stringify","isEmpty","includes","status","message","title","query","placeholder","transformedMetrics","text","selectParam","transformMetrics","datasourceRequest","geometry","coordinates","error","Array","isArray","Math","min","table","columnMap","meta","refId","rows","hasOwnProperty","push","row","time","j","index","panelType","parseInt","phenomenonTime","datapoint","Thing","metrics","forEach","metric"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\n\nimport {JSONPath} from './external/jsonpath.js'; // copied with grunt\nexport class GenericDatasource {\n  constructor(instanceSettings, $q, backendSrv, templateSrv, alertSrv, contextSrv, dashboardSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.headers = { 'Content-Type': 'application/json' };\n    this.alertSrv = alertSrv;\n    this.contextSrv = contextSrv;\n    this.dashboardSrv = dashboardSrv;\n    this.notificationShowTime = 5000;\n    this.topCount = 1000;\n\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    }\n  }\n\n  getTimeFilter(options, key) {\n    let from = options.range.from.utc().format('YYYY-MM-DDTHH:mm:ss.SSS') + 'Z';\n    let to = options.range.to.utc().format('YYYY-MM-DDTHH:mm:ss.SSS') + 'Z';\n    return key + ' gt ' + from + ' and ' + key + ' lt ' + to;\n  }\n\n  getFormatedId(id) {\n    return (Number.isInteger(id) || !isNaN(id)) ? id : '\"' + id + '\"';\n  }\n\n  async query(options) {\n    options.targets = _.filter(options.targets, target => target.hide !== true);\n\n    let allTargetResults = { data: [] };\n\n    let testPromises = options.targets.map(async target => {\n      let self = this;\n      let subUrl = '';\n      let thisTargetResult = {\n        'target' : target.selectedDatastreamName.toString(),\n        'datapoints' : [],\n      };\n\n      if (target.selectedDatastreamDirty) {\n        return thisTargetResult;\n      }\n\n      if(typeof(target.selectedLimit) == \"undefined\") {\n        target.selectedLimit = 1;\n      }\n      let limit = 0;\n\n      if (target.type === \"Locations\") {\n        if (target.selectedLocationId == 0) {\n          return thisTargetResult;\n        }\n        let timeFilter = this.getTimeFilter(options,\"time\");\n        subUrl = `/Locations(${this.getFormatedId(target.selectedLocationId)})/HistoricalLocations?$filter=${timeFilter}&$expand=Things($select=name)&$select=time&$top=${this.topCount}`;\n      } else if(target.type === \"Things\" && target.selectedThingOption === \"Historical Locations\") {\n        if (target.selectedThingId == 0) {\n          return thisTargetResult;\n        }\n\n        let timeFilter = this.getTimeFilter(options,\"time\");\n        subUrl = `/Things(${this.getFormatedId(target.selectedThingId)})/HistoricalLocations?$filter=${timeFilter}&$expand=Locations($select=name)&$select=time&$top=${target.selectedLimit === 0 ? this.topCount : target.selectedLimit}`;\n        \n        let data = await this.fetchData(this.url + subUrl, target.selectedLimit);\n        return this.transformToTable(\n          data, \n          target.selectedLimit, \n          {\n            columns: [\n              \"name\"\n            ], \n            values: [\n              function(v) { return v.Locations[0].name; }\n            ]\n          }, \n          target);\n      } else if(target.type === \"Things\" && target.selectedThingOption === \"Historical Locations with Coordinates\") {\n        if (target.selectedThingId == 0) {\n          return thisTargetResult;\n        }\n\n        let timeFilter = this.getTimeFilter(options,\"time\");\n        subUrl = `/Things(${this.getFormatedId(target.selectedThingId)})/HistoricalLocations?$filter=${timeFilter}&$expand=Locations($select=name,location)&$select=time&$top=${target.selectedLimit === 0 ? this.topCount : target.selectedLimit}`;\n        \n        let data = await this.fetchData(this.url + subUrl, target.selectedLimit);\n        if(target.selectedDatastreamId !== 0) {\n          data = await this.dataMergeDatastream(data, target.selectedDatastreamId);\n        }\n        return this.transformToTable(\n          data, \n          target.selectedLimit, \n          {\n            columns: [\n              \"name\", \n              \"longitude\", \n              \"latitude\", \n              \"metric\"\n            ], \n            values: [\n              function(v) { return v.Locations[0].name; }, \n              function(v) { return self.transformParseLoc(v.Locations[0].location)[0]; }, \n              function(v) { return self.transformParseLoc(v.Locations[0].location)[1]; }, \n              function(v) { return self.findDataResult(v, target); }\n            ]\n          }, \n          target);\n      } else {\n        if (target.selectedDatastreamId == 0) {\n          return thisTargetResult;\n        }\n        let timeFilter = this.getTimeFilter(options,\"phenomenonTime\");\n        subUrl = `/Datastreams(${this.getFormatedId(target.selectedDatastreamId)})/Observations?$filter=${timeFilter}&$select=phenomenonTime,result&$orderby=phenomenonTime desc&$top=${this.topCount}`;\n      }\n      console.log(\"subUrl:\", subUrl);\n\n      let transformedResults = [];\n      let hasNextLink = true;\n      let fullUrl = this.url + subUrl;\n\n      while(hasNextLink) {\n        if(transformedResults.length >= limit && limit !== 0) {\n          break;\n        }\n\n        let response = await this.doRequest({\n          url: fullUrl,\n          method: 'GET'\n        });\n\n        hasNextLink = _.has(response.data, \"@iot.nextLink\");\n        if (hasNextLink) {\n          subUrl = subUrl.split('?')[0];\n          fullUrl = this.url + subUrl + \"?\" + response.data[\"@iot.nextLink\"].split('?')[1];\n        }\n\n        if (target.type === \"Locations\") {\n          transformedResults = transformedResults.concat(self.transformThings(target, response.data.value));\n        } else {\n          transformedResults = transformedResults.concat(self.transformDataSource(target,response.data.value));\n        }\n      }\n\n      thisTargetResult.datapoints = transformedResults;\n\n      return thisTargetResult;\n    });\n\n    return Promise.all(testPromises).then(function (values) {\n      allTargetResults.data = values;\n      return allTargetResults;\n    });\n  }\n\n  async dataMergeDatastream(data, datastreamid) {\n    for(let i=0; i<data.length; i++) {\n      let surl = `/Datastreams(${datastreamid})/Observations?$select=result,phenomenonTime&$top=1&$filter=phenomenonTime le ${data[i]['time']}`;\n      let sdata = await this.fetchData(this.url + surl, 1);\n      data[i]['result'] = sdata[0]['result'];\n    }\n    return data;\n  }\n\n  findDataResult(data, target) {\n    if(typeof(data.result) === \"undefined\" || data.result === null) {\n      return null;\n    }\n    if(this.isOmObservationType(target.selectedDatastreamObservationType)) {\n      let result = new JSONPath({ json: data.result, path: target.jsonQuery });\n      return (typeof result[0] === 'object') ? JSON.stringify(result[0]) : result[0];\n    } else {\n      return typeof data.result === 'object' ? JSON.stringify(data.result) : data.result;\n    }\n  }\n\n  async fetchData(url, limit) {\n    let result = [];\n    let hasNextLink = true;\n    let fullUrl = url;\n    while(hasNextLink) {\n      if(result.length >= limit && limit !== 0) {\n        break;\n      }\n\n      let response = await this.doRequest({\n        url: fullUrl,\n        method: 'GET'\n      });\n\n      hasNextLink = _.has(response.data, \"@iot.nextLink\");\n      if (hasNextLink) {\n        fullUrl = fullUrl.split('?')[0]; + \"?\" + response.data[\"@iot.nextLink\"].split('?')[1];\n      }\n\n      result = result.concat(response.data.value);\n    }\n    return result;\n  }\n\n  isOmObservationType(type) {\n    if (_.isEmpty(type)) {\n      return false;\n    }\n\n    if (!type.includes('om_observation')) {\n      return false;\n    }\n\n    return true;\n  }\n\n  testDatasource() {\n    return this.doRequest({\n      url: this.url,\n      method: 'GET',\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: 'success', message: 'Data source is working', title: 'Success' };\n      }\n    });\n  }\n\n  async metricFindQuery(query, subUrl, type) {\n    let placeholder = 'select a sensor';\n\n    if (type === 'thing') {\n      placeholder = 'select a thing';\n    } else if (type === 'datastream') {\n      placeholder = 'select a datastream';\n    } else if (type === 'location') {\n      placeholder = 'select a location';\n    }\n\n    let transformedMetrics = [{\n      text: placeholder,\n      value: 0,\n      type: ''\n    }];\n\n    let hasNextLink = true;\n    let selectParam = (type === 'datastream') ? '$select=name,id,observationType' : '$select=name,id';\n    let fullUrl = this.url + subUrl + `?$top=${this.topCount}&${selectParam}`;\n\n    while (hasNextLink) {\n      let result = await this.doRequest({\n        url: fullUrl,\n        method: 'GET',\n      });\n      hasNextLink = _.has(result.data, '@iot.nextLink');\n      if (hasNextLink) {\n        fullUrl = this.url + subUrl + '?' + result.data['@iot.nextLink'].split('?')[1];\n      }\n      transformedMetrics = transformedMetrics.concat(this.transformMetrics(result.data.value, type));\n    }\n\n    return transformedMetrics;\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  //#region Transforn results\n  transformParseLoc(location) {\n    if (location.type === 'Feature' && location.geometry.type === 'Point') {\n      return location.geometry.coordinates;\n    } else if (location.type === 'Point') {\n      return location.coordinates;\n    } else {\n      console.error('Unsupported location type for Thing. Expected GeoJSON Feature.Point or Point.');\n      return [0,0];\n    }\n  }\n\n  transformToTable(data, limit, options, target) {\n    if (!data) {\n      console.error('Could not convert data to Tableformat, data is not valid.');\n      return [];\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length === 0) {\n        console.log('Could not convert data to Tableformat, data is empty.');\n        return [];\n      }\n    }\n\n    if(limit == 0) {\n      limit = data.length;\n    }\n    limit = Math.min(limit, data.length);\n\n    let table = {\n      columnMap: {},\n      columns: [\n        {text: \"time\", type: \"time\"}\n      ],\n      meta: {},\n      refId: target.refId,\n      rows: [],\n      type: \"table\"\n    };\n\n    if(options.hasOwnProperty(\"columns\")) {\n      for(let i = 0; i < options.columns.length; i++) {\n        table.columns.push({text: options.columns[i]});\n      }\n    }\n    \n    if(options.hasOwnProperty(\"values\")) {\n      for(let i = 0; i < limit; i++) {\n        let row = [data[i].time];\n        for(let j = 0; j < options.values.length; j++) {\n          row.push(options.values[j](data[i]));\n        }\n        table.rows.push(row);\n      }\n    }\n    return table;\n  }\n\n  transformDataSource(target, values) {\n    let self = this;\n\n    if (self.isOmObservationType(target.selectedDatastreamObservationType) && _.isEmpty(target.jsonQuery)) {\n      return [];\n    }\n\n    let datapoints = _.map(values, function (value, index) {\n      if (self.isOmObservationType(target.selectedDatastreamObservationType)) {\n        var result = new JSONPath({ json: value.result, path: target.jsonQuery });\n\n        if (target.panelType === 'table' || target.panelType === 'singlestat') {\n          result = (typeof result[0] === 'object') ? JSON.stringify(result[0]) : result[0];\n          return [result, parseInt(moment(value.phenomenonTime, 'YYYY-MM-DDTHH:mm:ss.SSSZ').format('x'))];\n        } else {\n          return [result[0], parseInt(moment(value.phenomenonTime, 'YYYY-MM-DDTHH:mm:ss.SSSZ').format('x'))];\n        }\n      } else {\n        if (target.panelType === 'table') {\n          return [_.isEmpty(value.result.toString()) ? '-' : value.result, parseInt(moment(value.phenomenonTime, 'YYYY-MM-DDTHH:mm:ss.SSSZ').format('x'))];\n        } else {\n          return [value.result, parseInt(moment(value.phenomenonTime, 'YYYY-MM-DDTHH:mm:ss.SSSZ').format('x'))];\n        }\n      }\n    });\n\n    datapoints = _.filter(datapoints, function (datapoint) {\n      return (typeof datapoint[0] === 'string' || typeof datapoint[0] === 'number' || (Number(datapoint[0]) === datapoint[0] && datapoint[0] % 1 !== 0));\n    });\n\n    return datapoints;\n  }\n\n  transformThings(target, values) {\n    return _.map(values, value => {\n      return [_.isEmpty(value.Thing.name) ? '-' : value.Thing.name, parseInt(moment(value.time, 'YYYY-MM-DDTHH:mm:ss.SSSZ').format('x'))];\n    });\n  }\n\n  transformMetrics(metrics, type) {\n    let transformedMetrics = [];\n\n    _.forEach(metrics, (metric, index) => {\n      transformedMetrics.push({\n        text: metric.name + ' ( ' + metric['@iot.id'] + ' )',\n        value: metric['@iot.id'],\n        type: metric['observationType']\n      });\n    });\n\n    return transformedMetrics;\n  }\n  //#endregion\n}"]}